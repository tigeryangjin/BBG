--*********************************************************************************
--单品库存核对
--*********************************************************************************
--RA
--AVCOST
--W_RTL_INV_IT_LC_DY_FV
--单品库存汇总表

SELECT * FROM RADM.W_RTL_INV_IT_LC_DY_F T WHERE T.INV_SOH_QTY > 0;

DROP MATERIALIZED VIEW RADM.RA_INV_IT_LC_DY_CHECK;

CREATE MATERIALIZED VIEW RADM.RA_INV_IT_LC_DY_CHECK AS
  SELECT PROD.PROD_NUM          ITEM,
         ORG.ORG_NUM            LOC,
         T.INV_SOH_QTY,
         T.INV_SOH_COST_AMT_LCL
    FROM RADM.W_RTL_INV_IT_LC_DY_FV T, W_PRODUCT_D PROD, W_INT_ORG_D ORG
   WHERE T.ORG_WID = ORG.ROW_WID
     AND T.PROD_WID = PROD.ROW_WID
     AND PROD.CURRENT_FLG = 'Y'
     AND T.DT_WID = '1' || TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000';
--RMS-----------------------------------------------------------------------------------
--SOURE
SELECT T.ITEM, T.LOC, T.STOCK_ON_HAND, T.STOCK_ON_HAND * T.AV_COST COST
  FROM RMSHIST.ITEM_LOC_SOH_HIST@RA_RMS_DBLINK T
 WHERE T.SOH_BAK_DATE = DATE '2014-05-03'
   AND T.STOCK_ON_HAND <> 0;

SELECT T.ITEM, T.LOC,
  FROM RMSHIST.ITEM_LOC_SOH_HIST T
 WHERE T.SOH_BAK_DATE = DATE '2014-05-03';

SELECT T.ITEM, T.LOC, COUNT(*)
  FROM RMS.ITEM_LOC_SOH T
 GROUP BY T.ITEM, T.LOC
HAVING COUNT(*) > 1;

--CHECK
DROP MATERIALIZED VIEW RADM.RMS_RA_INV_CHECK_DIFF;

CREATE MATERIALIZED VIEW RADM.RMS_RA_INV_CHECK_DIFF AS
  SELECT RMS.ITEM,
         RMS.LOC,
         RMS.LOC_TYPE,
         RMS.STOCK_ON_HAND RMS_SOH,
         RA.INV_SOH_QTY RA_SOH,
         RMS.STOCK_ON_HAND - RA.INV_SOH_QTY DIFF_SOH,
         RMS.COST RMS_COST,
         RA.INV_SOH_COST_AMT_LCL RA_COST,
         RMS.COST - RA.INV_SOH_COST_AMT_LCL DIFF_COST,
         SYSDATE W_INSERT_DT
    FROM (SELECT T.ITEM,
                 T.LOC,
                 T.LOC_TYPE,
                 T.STOCK_ON_HAND,
                 T.STOCK_ON_HAND * T.AV_COST COST
            FROM RMSHIST.ITEM_LOC_SOH_HIST@RA_RMS_DBLINK T
           WHERE T.SOH_BAK_DATE =
                 TO_DATE(TO_CHAR(SYSDATE - 1, 'YYYYMMDD'), 'YYYYMMDD')) RMS,
         RADM.RA_INV_IT_LC_DY_CHECK RA
   WHERE RMS.ITEM = RA.ITEM(+)
     AND RMS.LOC = RA.LOC(+)
     AND (RMS.STOCK_ON_HAND <> RA.INV_SOH_QTY /*OR
                                                                                                                                                                                                                                                                                                                         RMS.COST <> RA.INV_SOH_COST_AMT_LCL*/
         )
  /*   AND EXISTS (SELECT 1
   FROM RMS.IF_TRAN_DATA@RA_RMS_DBLINK TRAN
  WHERE TRAN.ITEM = RMS.ITEM
    AND TRAN.LOCATION = RMS.LOC)*/
  ;

--CHEKC ITEM_LOC
SELECT * FROM RADM.W_PRODUCT_D T WHERE T.PROD_NUM = '100090437';
SELECT * FROM RADM.W_INT_ORG_D T WHERE T.ORG_NUM = '120002';
--W_RTL_INV_IT_LC_DY_F
SELECT *
  FROM RADM.W_RTL_INV_IT_LC_DY_F T
 WHERE T.PROD_WID = 376266
   AND T.ORG_WID = 125;
--ITEM_LOC_SOH_HIST
SELECT *
  FROM RMSHIST.ITEM_LOC_SOH_HIST@RA_RMS_DBLINK T
 WHERE T.ITEM = 800336677
   and t.loc = 120138;
--W_RTL_INV_IT_LC_DY_FV
SELECT *
  FROM RADM.W_RTL_INV_IT_LC_DY_FV T
 WHERE T.PROD_WID = 432272
   AND T.ORG_WID = 40
   AND T.DT_WID = '120140505000';

--有差异,并且在IF_TRAN_DATA中
SELECT *
  FROM RADM.YJ_RMS_RA_INV_DIFF@RMS_RA T
 WHERE EXISTS (SELECT 1
          FROM RMS.IF_TRAN_DATA D
         WHERE T.ITEM = D.ITEM
           AND T.LOC = D.LOCATION);

--处理W_RTL_INV_IT_LC_DY_F表TO_DT_WID有二条999999999999的记录

SELECT T.PROD_WID, T.ORG_WID
  FROM RADM.W_RTL_INV_IT_LC_DY_F T
 WHERE T.TO_DT_WID = '999999999999999'
 GROUP BY T.PROD_WID, T.ORG_WID, T.TO_DT_WID
HAVING COUNT(*) > 1;

SELECT T.PROD_WID,
       T.ORG_WID,
       T.FROM_DT_WID,
       T.TO_DT_WID,
       CASE
         WHEN B.NEW_TO_DT_WID IS NOT NULL THEN
          TO_NUMBER('1' || TO_CHAR(B.NEW_TO_DT_WID, 'YYYYMMDD') || '000')
         WHEN B.NEW_TO_DT_WID IS NULL THEN
          999999999999999
       END NEW_TO_DT_WID
  FROM (SELECT ROW_WID,
               LEAD(TO_DATE(SUBSTR(From_DT_WID, 2, 8), 'YYYYMMDD')) Over(Partition By PROD_WID, ORG_WID Order By TO_DATE(SUBSTR(From_DT_WID, 2, 8), 'YYYYMMDD')) - 1 NEW_TO_DT_WID
          FROM RADM.W_RTL_INV_IT_LC_DY_F
         WHERE PROD_WID = 441522
           AND ORG_WID = 64) B,
       W_RTL_INV_IT_LC_DY_F T
 WHERE T.ROW_WID = B.ROW_WID
   AND T.PROD_WID = 441522
   AND T.ORG_WID = 64;
--UPDATE   
UPDATE RADM.W_RTL_INV_IT_LC_DY_F T
   SET T.TO_DT_WID =
       (SELECT CASE
                 WHEN B.NEW_TO_DT_WID IS NOT NULL THEN
                  TO_NUMBER('1' || TO_CHAR(B.NEW_TO_DT_WID, 'YYYYMMDD') ||
                            '000')
                 WHEN B.NEW_TO_DT_WID IS NULL THEN
                  999999999999999
               END NEW_TO_DT_WID
          FROM (SELECT ROW_WID,
                       LEAD(TO_DATE(SUBSTR(From_DT_WID, 2, 8), 'YYYYMMDD')) Over(Partition By PROD_WID, ORG_WID Order By TO_DATE(SUBSTR(From_DT_WID, 2, 8), 'YYYYMMDD')) - 1 NEW_TO_DT_WID
                  FROM RADM.W_RTL_INV_IT_LC_DY_F
                 WHERE PROD_WID = 740415
                   AND ORG_WID = 168) B
         WHERE T.ROW_WID = B.ROW_WID)
 WHERE T.PROD_WID = 740415
   AND T.ORG_WID = 168
   AND T.TO_DT_WID = 999999999999999;

--是用存储过程批量修护
/*begin
  -- Call the procedure
  yj_update_w_rtl_inv_it_lc_dy_f;
end;*/
-----------------------------------------------------------------------
--单品库存汇总表处理
SELECT *
  FROM ALL_ALL_TABLES T
 WHERE T.table_name LIKE '%W_RTL_INV%'
   AND T.owner = 'RADM';
/*
1.W_RTL_INV_CL_LC_DY_A
2.W_RTL_INV_CL_LC_MN_A
3.W_RTL_INV_DP_LC_DY_A
4.W_RTL_INV_DP_LC_MN_A
5.W_RTL_INV_IT_DY_A
6.W_RTL_INV_SC_DY_A     OK
7.W_RTL_INV_SC_DY_CUR_A
8.W_RTL_INV_SC_LC_DY_A
9.W_RTL_INV_SC_LC_MN_A
10.W_RTL_INV_SC_MN_A
11.W_RTL_INV_SC_MN_CUR_A
*/
SELECT *
  FROM RADM.W_RTL_INV_IT_DY_A T
 WHERE T.INV_SOH_QTY > 0
   and t.dt_wid = 120140525000;
SELECT * FROM RADM.W_RTL_INV_IT_LC_DY_FV T WHERE T.DT_WID = 120140525000;
SELECT * FROM RABATCHER.W_PRODUCT_D_RTL_TMP T;
SELECT MAX(T.PROD_SC_WID), MIN(T.PROD_SC_WID)
  FROM RABATCHER.W_PRODUCT_D_RTL_TMP T;
SELECT MAX(T.PROD_DH_WID), MIN(T.PROD_DH_WID)
  FROM RADM.W_RTL_INV_SC_DY_A T;
--6.W_RTL_INV_SC_DY_A-----------------------------------------------------------------------------
merge /*+ APPEND */
into W_RTL_INV_SC_DY_A T
using (SELECT P.PROD_SC_WID,
              F.DT_WID,
              F.CLEARANCE_FLG,
              SUM(F.INV_SOH_QTY) INV_SOH_QTY,
              SUM(F.INV_ON_ORD_QTY) INV_ON_ORD_QTY,
              SUM(F.INV_IN_TRAN_QTY) INV_IN_TRAN_QTY,
              SUM(F.INV_MAX_SOH_QTY) INV_MAX_SOH_QTY,
              SUM(F.INV_MIN_SOH_QTY) INV_MIN_SOH_QTY,
              AVG(F.INV_UNIT_RTL_AMT_LCL) INV_UNIT_RTL_AMT_LCL,
              AVG(F.INV_UNIT_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_UNIT_RTL_AMT,
              AVG(F.INV_UNIT_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_UNIT_RTL_AMT_GLOBAL1,
              AVG(F.INV_UNIT_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_UNIT_RTL_AMT_GLOBAL2,
              AVG(F.INV_UNIT_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_UNIT_RTL_AMT_GLOBAL3,
              SUM(F.INV_SOH_RTL_AMT_LCL) INV_SOH_RTL_AMT_LCL,
              SUM(F.INV_SOH_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_SOH_RTL_AMT,
              SUM(F.INV_SOH_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_SOH_RTL_AMT_GLOBAL1,
              SUM(F.INV_SOH_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_SOH_RTL_AMT_GLOBAL2,
              SUM(F.INV_SOH_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_SOH_RTL_AMT_GLOBAL3,
              SUM(F.INV_ON_ORD_RTL_AMT_LCL) INV_ON_ORD_RTL_AMT_LCL,
              SUM(F.INV_ON_ORD_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_ON_ORD_RTL_AMT,
              SUM(F.INV_ON_ORD_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_ON_ORD_RTL_AMT_GLOBAL1,
              SUM(F.INV_ON_ORD_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_ON_ORD_RTL_AMT_GLOBAL2,
              SUM(F.INV_ON_ORD_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_ON_ORD_RTL_AMT_GLOBAL3,
              SUM(F.INV_IN_TRAN_RTL_AMT_LCL) INV_IN_TRAN_RTL_AMT_LCL,
              SUM(F.INV_IN_TRAN_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_IN_TRAN_RTL_AMT,
              SUM(F.INV_IN_TRAN_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_IN_TRAN_RTL_AMT_GLOBAL1,
              SUM(F.INV_IN_TRAN_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_IN_TRAN_RTL_AMT_GLOBAL2,
              SUM(F.INV_IN_TRAN_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_IN_TRAN_RTL_AMT_GLOBAL3,
              SUM(F.INV_MAX_SOH_RTL_AMT_LCL) INV_MAX_SOH_RTL_AMT_LCL,
              SUM(F.INV_MAX_SOH_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_MAX_SOH_RTL_AMT,
              SUM(F.INV_MAX_SOH_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_MAX_SOH_RTL_AMT_GLOBAL1,
              SUM(F.INV_MAX_SOH_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_MAX_SOH_RTL_AMT_GLOBAL2,
              SUM(F.INV_MAX_SOH_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_MAX_SOH_RTL_AMT_GLOBAL3,
              SUM(F.INV_MIN_SOH_RTL_AMT_LCL) INV_MIN_SOH_RTL_AMT_LCL,
              SUM(F.INV_MIN_SOH_RTL_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_MIN_SOH_RTL_AMT,
              SUM(F.INV_MIN_SOH_RTL_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_MIN_SOH_RTL_AMT_GLOBAL1,
              SUM(F.INV_MIN_SOH_RTL_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_MIN_SOH_RTL_AMT_GLOBAL2,
              SUM(F.INV_MIN_SOH_RTL_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_MIN_SOH_RTL_AMT_GLOBAL3,
              AVG(F.INV_AVG_COST_AMT_LCL) INV_AVG_COST_AMT_LCL,
              AVG(F.INV_AVG_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_AVG_COST_AMT,
              AVG(F.INV_AVG_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_AVG_COST_AMT_GLOBAL1,
              AVG(F.INV_AVG_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_AVG_COST_AMT_GLOBAL2,
              AVG(F.INV_AVG_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_AVG_COST_AMT_GLOBAL3,
              AVG(F.INV_UNIT_COST_AMT_LCL) INV_UNIT_COST_AMT_LCL,
              AVG(F.INV_UNIT_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_UNIT_COST_AMT,
              AVG(F.INV_UNIT_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_UNIT_COST_AMT_GLOBAL1,
              AVG(F.INV_UNIT_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_UNIT_COST_AMT_GLOBAL2,
              AVG(F.INV_UNIT_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_UNIT_COST_AMT_GLOBAL3,
              SUM(F.INV_SOH_COST_AMT_LCL) INV_SOH_COST_AMT_LCL,
              SUM(F.INV_SOH_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_SOH_COST_AMT,
              SUM(F.INV_SOH_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_SOH_COST_AMT_GLOBAL1,
              SUM(F.INV_SOH_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_SOH_COST_AMT_GLOBAL2,
              SUM(F.INV_SOH_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_SOH_COST_AMT_GLOBAL3,
              SUM(F.INV_ON_ORD_COST_AMT_LCL) INV_ON_ORD_COST_AMT_LCL,
              SUM(F.INV_ON_ORD_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_ON_ORD_COST_AMT,
              SUM(F.INV_ON_ORD_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_ON_ORD_COST_AMT_GLOBAL1,
              SUM(F.INV_ON_ORD_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_ON_ORD_COST_AMT_GLOBAL2,
              SUM(F.INV_ON_ORD_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_ON_ORD_COST_AMT_GLOBAL3,
              SUM(F.INV_IN_TRAN_COST_AMT_LCL) INV_IN_TRAN_COST_AMT_LCL,
              SUM(F.INV_IN_TRAN_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_IN_TRAN_COST_AMT,
              SUM(F.INV_IN_TRAN_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_IN_TRAN_COST_AMT_GLOBAL1,
              SUM(F.INV_IN_TRAN_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_IN_TRAN_COST_AMT_GLOBAL2,
              SUM(F.INV_IN_TRAN_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_IN_TRAN_COST_AMT_GLOBAL3,
              SUM(F.INV_MAX_SOH_COST_AMT_LCL) INV_MAX_SOH_COST_AMT_LCL,
              SUM(F.INV_MAX_SOH_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_MAX_SOH_COST_AMT,
              SUM(F.INV_MAX_SOH_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_MAX_SOH_COST_AMT_GLOBAL1,
              SUM(F.INV_MAX_SOH_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_MAX_SOH_COST_AMT_GLOBAL2,
              SUM(F.INV_MAX_SOH_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_MAX_SOH_COST_AMT_GLOBAL3,
              SUM(F.INV_MIN_SOH_COST_AMT_LCL) INV_MIN_SOH_COST_AMT_LCL,
              SUM(F.INV_MIN_SOH_COST_AMT_LCL / F.LOC_EXCHANGE_RATE) INV_MIN_SOH_COST_AMT,
              SUM(F.INV_MIN_SOH_COST_AMT_LCL / F.GLOBAL1_EXCHANGE_RATE) INV_MIN_SOH_COST_AMT_GLOBAL1,
              SUM(F.INV_MIN_SOH_COST_AMT_LCL / F.GLOBAL2_EXCHANGE_RATE) INV_MIN_SOH_COST_AMT_GLOBAL2,
              SUM(F.INV_MIN_SOH_COST_AMT_LCL / F.GLOBAL3_EXCHANGE_RATE) INV_MIN_SOH_COST_AMT_GLOBAL3,
              MAX(F.DATASOURCE_NUM_ID) DATASOURCE_NUM_ID,
              MAX(F.DELETE_FLG) DELETE_FLG,
              MAX(F.ETL_PROC_WID) ETL_PROC_WID,
              MAX(P.PROD_SC_NUM ||
                  TO_CHAR(TO_DATE(SUBSTR(F.DT_WID, 2, 8), 'YYYYMMDD'),
                          'DD-MON-YY',
                          'NLS_DATE_LANGUAGE=American') || F.CLEARANCE_FLG) INTEGRATION_ID,
              MAX(F.TENANT_ID) TENANT_ID,
              SYSDATE W_INSERT_DT,
              SYSDATE W_UPDATE_DT,
              MAX(X_CUSTOM) X_CUSTOM
         FROM RADM.W_RTL_INV_IT_LC_DY_FV F, RABATCHER.W_PRODUCT_D_RTL_TMP P
        WHERE F.PROD_WID = P.PROD_IT_WID
       --AND F.DT_WID BETWEEN 120140401000 AND 120140430000
        GROUP BY P.PROD_SC_WID, F.DT_WID, F.CLEARANCE_FLG) S
ON (S.PROD_SC_WID = T.PROD_DH_WID AND S.DT_WID = T.DT_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.INV_SOH_QTY                  = S.INV_SOH_QTY,
         T.INV_ON_ORD_QTY               = S.INV_ON_ORD_QTY,
         T.INV_IN_TRAN_QTY              = S.INV_IN_TRAN_QTY,
         T.INV_MAX_SOH_QTY              = S.INV_MAX_SOH_QTY,
         T.INV_MIN_SOH_QTY              = S.INV_MIN_SOH_QTY,
         T.INV_UNIT_RTL_AMT_LCL         = S.INV_UNIT_RTL_AMT_LCL,
         T.INV_UNIT_RTL_AMT             = S.INV_UNIT_RTL_AMT,
         T.INV_UNIT_RTL_AMT_GLOBAL1     = S.INV_UNIT_RTL_AMT_GLOBAL1,
         T.INV_UNIT_RTL_AMT_GLOBAL2     = S.INV_UNIT_RTL_AMT_GLOBAL2,
         T.INV_UNIT_RTL_AMT_GLOBAL3     = S.INV_UNIT_RTL_AMT_GLOBAL3,
         T.INV_SOH_RTL_AMT_LCL          = S.INV_SOH_RTL_AMT_LCL,
         T.INV_SOH_RTL_AMT              = S.INV_SOH_RTL_AMT,
         T.INV_SOH_RTL_AMT_GLOBAL1      = S.INV_SOH_RTL_AMT_GLOBAL1,
         T.INV_SOH_RTL_AMT_GLOBAL2      = S.INV_SOH_RTL_AMT_GLOBAL2,
         T.INV_SOH_RTL_AMT_GLOBAL3      = S.INV_SOH_RTL_AMT_GLOBAL3,
         T.INV_ON_ORD_RTL_AMT_LCL       = S.INV_ON_ORD_RTL_AMT_LCL,
         T.INV_ON_ORD_RTL_AMT           = S.INV_ON_ORD_RTL_AMT,
         T.INV_ON_ORD_RTL_AMT_GLOBAL1   = S.INV_ON_ORD_RTL_AMT_GLOBAL1,
         T.INV_ON_ORD_RTL_AMT_GLOBAL2   = S.INV_ON_ORD_RTL_AMT_GLOBAL2,
         T.INV_ON_ORD_RTL_AMT_GLOBAL3   = S.INV_ON_ORD_RTL_AMT_GLOBAL3,
         T.INV_IN_TRAN_RTL_AMT_LCL      = S.INV_IN_TRAN_RTL_AMT_LCL,
         T.INV_IN_TRAN_RTL_AMT          = S.INV_IN_TRAN_RTL_AMT,
         T.INV_IN_TRAN_RTL_AMT_GLOBAL1  = S.INV_IN_TRAN_RTL_AMT_GLOBAL1,
         T.INV_IN_TRAN_RTL_AMT_GLOBAL2  = S.INV_IN_TRAN_RTL_AMT_GLOBAL2,
         T.INV_IN_TRAN_RTL_AMT_GLOBAL3  = S.INV_IN_TRAN_RTL_AMT_GLOBAL3,
         T.INV_MAX_SOH_RTL_AMT_LCL      = S.INV_MAX_SOH_RTL_AMT_LCL,
         T.INV_MAX_SOH_RTL_AMT          = S.INV_MAX_SOH_RTL_AMT,
         T.INV_MAX_SOH_RTL_AMT_GLOBAL1  = S.INV_MAX_SOH_RTL_AMT_GLOBAL1,
         T.INV_MAX_SOH_RTL_AMT_GLOBAL2  = S.INV_MAX_SOH_RTL_AMT_GLOBAL2,
         T.INV_MAX_SOH_RTL_AMT_GLOBAL3  = S.INV_MAX_SOH_RTL_AMT_GLOBAL3,
         T.INV_MIN_SOH_RTL_AMT_LCL      = S.INV_MIN_SOH_RTL_AMT_LCL,
         T.INV_MIN_SOH_RTL_AMT          = S.INV_MIN_SOH_RTL_AMT,
         T.INV_MIN_SOH_RTL_AMT_GLOBAL1  = S.INV_MIN_SOH_RTL_AMT_GLOBAL1,
         T.INV_MIN_SOH_RTL_AMT_GLOBAL2  = S.INV_MIN_SOH_RTL_AMT_GLOBAL2,
         T.INV_MIN_SOH_RTL_AMT_GLOBAL3  = S.INV_MIN_SOH_RTL_AMT_GLOBAL3,
         T.INV_AVG_COST_AMT_LCL         = S.INV_AVG_COST_AMT_LCL,
         T.INV_AVG_COST_AMT             = S.INV_AVG_COST_AMT,
         T.INV_AVG_COST_AMT_GLOBAL1     = S.INV_AVG_COST_AMT_GLOBAL1,
         T.Inv_Avg_Cost_Amt_Global2     = S.Inv_Avg_Cost_Amt_Global2,
         T.INV_AVG_COST_AMT_GLOBAL3     = S.INV_AVG_COST_AMT_GLOBAL3,
         T.INV_UNIT_COST_AMT_LCL        = S.INV_UNIT_COST_AMT_LCL,
         T.INV_UNIT_COST_AMT            = S.INV_UNIT_COST_AMT,
         T.INV_UNIT_COST_AMT_GLOBAL1    = S.INV_UNIT_COST_AMT_GLOBAL1,
         T.INV_UNIT_COST_AMT_GLOBAL2    = S.INV_UNIT_COST_AMT_GLOBAL2,
         T.INV_UNIT_COST_AMT_GLOBAL3    = S.INV_UNIT_COST_AMT_GLOBAL3,
         T.INV_SOH_COST_AMT_LCL         = S.INV_SOH_COST_AMT_LCL,
         T.INV_SOH_COST_AMT             = S.INV_SOH_COST_AMT,
         T.INV_SOH_COST_AMT_GLOBAL1     = S.INV_SOH_COST_AMT_GLOBAL1,
         T.INV_SOH_COST_AMT_GLOBAL2     = S.INV_SOH_COST_AMT_GLOBAL2,
         T.INV_SOH_COST_AMT_GLOBAL3     = S.INV_SOH_COST_AMT_GLOBAL3,
         T.INV_ON_ORD_COST_AMT_LCL      = S.INV_ON_ORD_COST_AMT_LCL,
         T.INV_ON_ORD_COST_AMT          = S.INV_ON_ORD_COST_AMT,
         T.INV_ON_ORD_COST_AMT_GLOBAL1  = S.INV_ON_ORD_COST_AMT_GLOBAL1,
         T.INV_ON_ORD_COST_AMT_GLOBAL2  = S.INV_ON_ORD_COST_AMT_GLOBAL2,
         T.INV_ON_ORD_COST_AMT_GLOBAL3  = S.INV_ON_ORD_COST_AMT_GLOBAL3,
         T.INV_IN_TRAN_COST_AMT_LCL     = S.INV_IN_TRAN_COST_AMT_LCL,
         T.INV_IN_TRAN_COST_AMT         = S.INV_IN_TRAN_COST_AMT,
         T.INV_IN_TRAN_COST_AMT_GLOBAL1 = S.INV_IN_TRAN_COST_AMT_GLOBAL1,
         T.INV_IN_TRAN_COST_AMT_GLOBAL2 = S.INV_IN_TRAN_COST_AMT_GLOBAL2,
         T.INV_IN_TRAN_COST_AMT_GLOBAL3 = S.INV_IN_TRAN_COST_AMT_GLOBAL3,
         T.INV_MAX_SOH_COST_AMT_LCL     = S.INV_MAX_SOH_COST_AMT_LCL,
         T.INV_MAX_SOH_COST_AMT         = S.INV_MAX_SOH_COST_AMT,
         T.INV_MAX_SOH_COST_AMT_GLOBAL1 = S.INV_MAX_SOH_COST_AMT_GLOBAL1,
         T.INV_MAX_SOH_COST_AMT_GLOBAL2 = S.INV_MAX_SOH_COST_AMT_GLOBAL2,
         T.INV_MAX_SOH_COST_AMT_GLOBAL3 = S.INV_MAX_SOH_COST_AMT_GLOBAL3,
         T.INV_MIN_SOH_COST_AMT_LCL     = S.INV_MIN_SOH_COST_AMT_LCL,
         T.INV_MIN_SOH_COST_AMT         = S.INV_MIN_SOH_COST_AMT,
         T.INV_MIN_SOH_COST_AMT_GLOBAL1 = S.INV_MIN_SOH_COST_AMT_GLOBAL1,
         T.INV_MIN_SOH_COST_AMT_GLOBAL2 = S.INV_MIN_SOH_COST_AMT_GLOBAL2,
         T.INV_MIN_SOH_COST_AMT_GLOBAL3 = S.INV_MIN_SOH_COST_AMT_GLOBAL3
WHEN NOT MATCHED THEN
  INSERT
    (T.ROW_WID,
     T.PROD_DH_WID,
     T.DT_WID,
     T.CLEARANCE_FLG,
     T.INV_SOH_QTY,
     T.INV_ON_ORD_QTY,
     T.INV_IN_TRAN_QTY,
     T.INV_MAX_SOH_QTY,
     T.INV_MIN_SOH_QTY,
     T.INV_UNIT_RTL_AMT_LCL,
     T.INV_UNIT_RTL_AMT,
     T.INV_UNIT_RTL_AMT_GLOBAL1,
     T.INV_UNIT_RTL_AMT_GLOBAL2,
     T.INV_UNIT_RTL_AMT_GLOBAL3,
     T.INV_SOH_RTL_AMT_LCL,
     T.INV_SOH_RTL_AMT,
     T.INV_SOH_RTL_AMT_GLOBAL1,
     T.INV_SOH_RTL_AMT_GLOBAL2,
     T.INV_SOH_RTL_AMT_GLOBAL3,
     T.INV_ON_ORD_RTL_AMT_LCL,
     T.INV_ON_ORD_RTL_AMT,
     T.INV_ON_ORD_RTL_AMT_GLOBAL1,
     T.INV_ON_ORD_RTL_AMT_GLOBAL2,
     T.INV_ON_ORD_RTL_AMT_GLOBAL3,
     T.INV_IN_TRAN_RTL_AMT_LCL,
     T.INV_IN_TRAN_RTL_AMT,
     T.INV_IN_TRAN_RTL_AMT_GLOBAL1,
     T.INV_IN_TRAN_RTL_AMT_GLOBAL2,
     T.INV_IN_TRAN_RTL_AMT_GLOBAL3,
     T.INV_MAX_SOH_RTL_AMT_LCL,
     T.INV_MAX_SOH_RTL_AMT,
     T.INV_MAX_SOH_RTL_AMT_GLOBAL1,
     T.INV_MAX_SOH_RTL_AMT_GLOBAL2,
     T.INV_MAX_SOH_RTL_AMT_GLOBAL3,
     T.INV_MIN_SOH_RTL_AMT_LCL,
     T.INV_MIN_SOH_RTL_AMT,
     T.INV_MIN_SOH_RTL_AMT_GLOBAL1,
     T.INV_MIN_SOH_RTL_AMT_GLOBAL2,
     T.INV_MIN_SOH_RTL_AMT_GLOBAL3,
     T.INV_AVG_COST_AMT_LCL,
     T.INV_AVG_COST_AMT,
     T.INV_AVG_COST_AMT_GLOBAL1,
     T.Inv_Avg_Cost_Amt_Global2,
     T.INV_AVG_COST_AMT_GLOBAL3,
     T.INV_UNIT_COST_AMT_LCL,
     T.INV_UNIT_COST_AMT,
     T.INV_UNIT_COST_AMT_GLOBAL1,
     T.INV_UNIT_COST_AMT_GLOBAL2,
     T.INV_UNIT_COST_AMT_GLOBAL3,
     T.INV_SOH_COST_AMT_LCL,
     T.INV_SOH_COST_AMT,
     T.INV_SOH_COST_AMT_GLOBAL1,
     T.INV_SOH_COST_AMT_GLOBAL2,
     T.INV_SOH_COST_AMT_GLOBAL3,
     T.INV_ON_ORD_COST_AMT_LCL,
     T.INV_ON_ORD_COST_AMT,
     T.INV_ON_ORD_COST_AMT_GLOBAL1,
     T.INV_ON_ORD_COST_AMT_GLOBAL2,
     T.INV_ON_ORD_COST_AMT_GLOBAL3,
     T.INV_IN_TRAN_COST_AMT_LCL,
     T.INV_IN_TRAN_COST_AMT,
     T.INV_IN_TRAN_COST_AMT_GLOBAL1,
     T.INV_IN_TRAN_COST_AMT_GLOBAL2,
     T.INV_IN_TRAN_COST_AMT_GLOBAL3,
     T.INV_MAX_SOH_COST_AMT_LCL,
     T.INV_MAX_SOH_COST_AMT,
     T.INV_MAX_SOH_COST_AMT_GLOBAL1,
     T.INV_MAX_SOH_COST_AMT_GLOBAL2,
     T.INV_MAX_SOH_COST_AMT_GLOBAL3,
     T.INV_MIN_SOH_COST_AMT_LCL,
     T.INV_MIN_SOH_COST_AMT,
     T.INV_MIN_SOH_COST_AMT_GLOBAL1,
     T.INV_MIN_SOH_COST_AMT_GLOBAL2,
     T.INV_MIN_SOH_COST_AMT_GLOBAL3,
     T.DATASOURCE_NUM_ID,
     T.DELETE_FLG,
     T.ETL_PROC_WID,
     T.INTEGRATION_ID,
     T.TENANT_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.X_CUSTOM)
  VALUES
    (RADM.W_RTL_INV_SC_DY_A_SEQ.NEXTVAL,
     S.PROD_SC_WID,
     S.DT_WID,
     S.CLEARANCE_FLG,
     S.INV_SOH_QTY,
     S.INV_ON_ORD_QTY,
     S.INV_IN_TRAN_QTY,
     S.INV_MAX_SOH_QTY,
     S.INV_MIN_SOH_QTY,
     S.INV_UNIT_RTL_AMT_LCL,
     S.INV_UNIT_RTL_AMT,
     S.INV_UNIT_RTL_AMT_GLOBAL1,
     S.INV_UNIT_RTL_AMT_GLOBAL2,
     S.INV_UNIT_RTL_AMT_GLOBAL3,
     S.INV_SOH_RTL_AMT_LCL,
     S.INV_SOH_RTL_AMT,
     S.INV_SOH_RTL_AMT_GLOBAL1,
     S.INV_SOH_RTL_AMT_GLOBAL2,
     S.INV_SOH_RTL_AMT_GLOBAL3,
     S.INV_ON_ORD_RTL_AMT_LCL,
     S.INV_ON_ORD_RTL_AMT,
     S.INV_ON_ORD_RTL_AMT_GLOBAL1,
     S.INV_ON_ORD_RTL_AMT_GLOBAL2,
     S.INV_ON_ORD_RTL_AMT_GLOBAL3,
     S.INV_IN_TRAN_RTL_AMT_LCL,
     S.INV_IN_TRAN_RTL_AMT,
     S.INV_IN_TRAN_RTL_AMT_GLOBAL1,
     S.INV_IN_TRAN_RTL_AMT_GLOBAL2,
     S.INV_IN_TRAN_RTL_AMT_GLOBAL3,
     S.INV_MAX_SOH_RTL_AMT_LCL,
     S.INV_MAX_SOH_RTL_AMT,
     S.INV_MAX_SOH_RTL_AMT_GLOBAL1,
     S.INV_MAX_SOH_RTL_AMT_GLOBAL2,
     S.INV_MAX_SOH_RTL_AMT_GLOBAL3,
     S.INV_MIN_SOH_RTL_AMT_LCL,
     S.INV_MIN_SOH_RTL_AMT,
     S.INV_MIN_SOH_RTL_AMT_GLOBAL1,
     S.INV_MIN_SOH_RTL_AMT_GLOBAL2,
     S.INV_MIN_SOH_RTL_AMT_GLOBAL3,
     S.INV_AVG_COST_AMT_LCL,
     S.INV_AVG_COST_AMT,
     S.INV_AVG_COST_AMT_GLOBAL1,
     S.Inv_Avg_Cost_Amt_Global2,
     S.INV_AVG_COST_AMT_GLOBAL3,
     S.INV_UNIT_COST_AMT_LCL,
     S.INV_UNIT_COST_AMT,
     S.INV_UNIT_COST_AMT_GLOBAL1,
     S.INV_UNIT_COST_AMT_GLOBAL2,
     S.INV_UNIT_COST_AMT_GLOBAL3,
     S.INV_SOH_COST_AMT_LCL,
     S.INV_SOH_COST_AMT,
     S.INV_SOH_COST_AMT_GLOBAL1,
     S.INV_SOH_COST_AMT_GLOBAL2,
     S.INV_SOH_COST_AMT_GLOBAL3,
     S.INV_ON_ORD_COST_AMT_LCL,
     S.INV_ON_ORD_COST_AMT,
     S.INV_ON_ORD_COST_AMT_GLOBAL1,
     S.INV_ON_ORD_COST_AMT_GLOBAL2,
     S.INV_ON_ORD_COST_AMT_GLOBAL3,
     S.INV_IN_TRAN_COST_AMT_LCL,
     S.INV_IN_TRAN_COST_AMT,
     S.INV_IN_TRAN_COST_AMT_GLOBAL1,
     S.INV_IN_TRAN_COST_AMT_GLOBAL2,
     S.INV_IN_TRAN_COST_AMT_GLOBAL3,
     S.INV_MAX_SOH_COST_AMT_LCL,
     S.INV_MAX_SOH_COST_AMT,
     S.INV_MAX_SOH_COST_AMT_GLOBAL1,
     S.INV_MAX_SOH_COST_AMT_GLOBAL2,
     S.INV_MAX_SOH_COST_AMT_GLOBAL3,
     S.INV_MIN_SOH_COST_AMT_LCL,
     S.INV_MIN_SOH_COST_AMT,
     S.INV_MIN_SOH_COST_AMT_GLOBAL1,
     S.INV_MIN_SOH_COST_AMT_GLOBAL2,
     S.INV_MIN_SOH_COST_AMT_GLOBAL3,
     S.DATASOURCE_NUM_ID,
     S.DELETE_FLG,
     S.ETL_PROC_WID,
     S.INTEGRATION_ID,
     S.TENANT_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.X_CUSTOM);

--check W_RTL_INV_SC_DY_A
SELECT P.PROD_SC_WID, F.DT_WID, SUM(F.INV_SOH_QTY) INV_SOH_QTY
  FROM RADM.W_RTL_INV_IT_LC_DY_FV F, RABATCHER.W_PRODUCT_D_RTL_TMP P
 WHERE F.PROD_WID = P.PROD_IT_WID
 GROUP BY P.PROD_SC_WID, F.DT_WID
 ORDER BY F.DT_WID, P.PROD_SC_WID;
SELECT T.PROD_DH_WID, T.DT_WID, T.INV_SOH_QTY
  FROM RADM.W_RTL_INV_SC_DY_A T;

SELECT A.PROD_SC_WID, A.DT_WID, A.INV_SOH_QTY, B.INV_SOH_QTY
  FROM (SELECT P.PROD_SC_WID, F.DT_WID, SUM(F.INV_SOH_QTY) INV_SOH_QTY
          FROM RADM.W_RTL_INV_IT_LC_DY_FV F, RABATCHER.W_PRODUCT_D_RTL_TMP P
         WHERE F.PROD_WID = P.PROD_IT_WID
         GROUP BY P.PROD_SC_WID, F.DT_WID) A,
       (SELECT T.PROD_DH_WID, T.DT_WID, T.INV_SOH_QTY
          FROM RADM.W_RTL_INV_SC_DY_A T) B
 WHERE A.PROD_SC_WID = B.PROD_DH_WID
   AND A.DT_WID = B.DT_WID
   AND A.INV_SOH_QTY <> B.INV_SOH_QTY;
--RAPXDB测试
INSERT INTO RADM.W_RTL_INV_IT_LC_DY_F
  SELECT *
    FROM RADM.W_RTL_INV_IT_LC_DY_F@RA_PRD T
   WHERE T.TO_DT_WID = 120140501000;
--5.W_RTL_INV_IT_DY_A---------------------------------------------------------------------------------

--*********************************************************************************
--供应商库存核对
--*********************************************************************************
--RMS
SELECT * FROM RMS.CMX_SUPP_INV@RA_RMS_DBLINK;
--RA
SELECT *
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_DY_FV T
 WHERE T.DT_WID = 120140518000;
--CHECK
CREATE MATERIALIZED VIEW RADM.RA_SUPP_INV_IT_LC_DY_CHECK AS
  SELECT PROD.PROD_NUM    ITEM,
         ORG.ORG_NUM      LOC,
         P.SUPPLIER_NUM,
         FV.SUPP_INV_QTY,
         FV.SUPP_INV_COST
    FROM RADM.BBG_RA_SUPP_INV_IT_LC_DY_FV FV,
         W_PRODUCT_D                      PROD,
         W_INT_ORG_D                      ORG,
         W_PARTY_ORG_D                    P
   WHERE FV.PROD_WID = PROD.ROW_WID
     AND FV.ORG_WID = ORG.ROW_WID
     AND FV.SUPPLIER_WID = P.ROW_WID
     AND PROD.CURRENT_FLG = 'Y'
     AND FV.DT_WID = '1' || TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000'
     AND FV.SUPP_INV_QTY <> 0;

--CREATE MATERIALIZED VIEW RADM.RMS_RA_INV_CHECK_DIFF AS
SELECT RMS.ITEM,
       RMS.LOC,
       RMS.SUPPLIER,
       --RMS.LOC_TYPE,
       RMS.SOH RMS_SOH,
       RA.SUPP_INV_QTY RA_SOH,
       RMS.SOH - RA.SUPP_INV_QTY DIFF_SOH,
       RMS.COST RMS_COST,
       RA.SUPP_INV_COST RA_COST,
       RMS.COST - RA.SUPP_INV_COST DIFF_COST,
       SYSDATE W_INSERT_DT
  FROM (SELECT T.ITEM,
               T.LOC,
               T.SUPPLIER,
               --T.LOC_TYPE,
               SUM(T.SOH) SOH,
               SUM(T.SOH * T.WAC) COST
          FROM RMS.CMX_SUPP_INV@RA_RMS_DBLINK T
         WHERE T.SOH <> 0
         GROUP BY T.ITEM, T.LOC, T.SUPPLIER) RMS,
       RADM.RA_SUPP_INV_IT_LC_DY_CHECK RA
 WHERE RMS.ITEM = RA.ITEM(+)
   AND RMS.LOC = RA.LOC(+)
   AND RMS.SUPPLIER = RA.SUPPLIER_NUM(+)
   AND (RMS.SOH <> RA.SUPP_INV_QTY /*OR RMS.COST <> RA.INV_SOH_COST_AMT_LCL*/
       );
--CHECK ITEM_LOC_SUPPLIER ITEM:8000000197 LOC:120196 SUPPLIER:37000154
--RMS
SELECT *
  FROM RMS.CMX_SUPP_INV@RA_RMS_DBLINK T
 WHERE T.ITEM = 800334737
   AND T.LOC = 120106
   AND T.SUPPLIER = 29001927;
--RA
SELECT * FROM RADM.W_PRODUCT_D T WHERE T.PROD_NUM = '800000197';
SELECT * FROM RADM.W_INT_ORG_D T WHERE T.ORG_NUM = '120196';
SELECT * FROM RADM.W_PARTY_D T WHERE T.INTEGRATION_ID = '29001927';
SELECT *
  FROM BBG_RA_SUPP_INV_IT_LC_DY_F T
 WHERE T.PROD_WID = 261665
   AND T.ORG_WID = 40006;
SELECT *
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_DY_FV T
 WHERE T.PROD_WID = 261665
   AND T.ORG_WID = 40006;
