--RMS中经营属性的定义
SELECT T.CODE BUSINESS_MODE, T.CODE_DESC BUSINESS_MODE_DESC
  FROM CMX_CODE_DETAIL@RA_RMS_DBLINK T
 WHERE T.CODE_TYPE = 'BSTP';
 
SELECT 
DISTINCT T.BUSINESS_MODE,
         CASE
           WHEN T.BUSINESS_MODE = 'JX' THEN
            '经销'
           WHEN T.BUSINESS_MODE = 'DX' THEN
            '代销'
           WHEN T.BUSINESS_MODE = 'LY' THEN
            '联营'
           WHEN T.BUSINESS_MODE = 'ZL' THEN
            '租赁'
           WHEN T.BUSINESS_MODE = 'ZS' THEN
            '招商'
           ELSE
            NULL
         END BUSINESS_MODE_DESC
  FROM RADM.BBG_RA_ITEM_LOC_D T;
 

--************************************************************************************************
--************************************************************************************************
--1、商品销售部分
--************************************************************************************************
--************************************************************************************************
--修改销售汇总表的唯一约束
/*
unique constraint (RADM.PK_W_RTL_SLS_DP_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_CL_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_CL_LC_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_SC_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_DP_LC_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_SC_LC_DY_CUR_A) violated
unique constraint (RADM.PK_W_RTL_SLS_CL_LC_DY_A) violated
unique constraint (RADM.PK_W_RTL_SLS_DP_LC_DY_A) violated
unique constraint (RADM.PK_W_RTL_SLS_SC_DY_A) violated
unique constraint (RADM.PK_W_RTL_SLS_IT_DY_SN_A) violated
unique constraint (RADM.PK_W_RTL_SLS_IT_DY_A) violated
unique constraint (RADM.PK_W_RTL_SLS_SC_LC_DY_A) violated
*/
--汇总表BBG_REFERENCE_DO1字段填充值,并且在表的备注字段上添加说明:Dimension扩展1,BUSINESS_MODE(经营属性)
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_DP_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_CL_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_CL_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_SC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_DP_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_CL_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_DP_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_IT_DY_SN_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.W_RTL_SLS_SC_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--汇总表唯一索引添加BBG_REFERENCE_DO1列

--************************************************************************************************
--************************************************************************************************
--3、供应商销售部分
--************************************************************************************************
--************************************************************************************************

--RMS数据源
SELECT * FROM RMS.BBG_RA_SUPP_SALES_FV;

SELECT * FROM RMS.CMX_ITEM_LOC_INFO T;
SELECT *
  FROM RMS.CMX_SUPPLIER_INFO T
 WHERE T.SUPPLIER_PARENT IS NOT NULL
   AND T.SUPPLIER = '17000076';
SELECT * FROM RMS.CMX_SUPP_INV T;
SELECT * FROM RMS.CMX_SUPP_SALES T;
SELECT * FROM RMS.ITEM_LOC;

/*
BBG_RA_SLS_IT_DY_A
BBG_RA_SLS_IT_DY_SN_A
BBG_RA_SLS_IT_LC_DY_A
BBG_RA_SLS_SC_DY_A
BBG_RA_SLS_SC_LC_DY_CUR_A
*/
--RADM.BBG_RA_SLS_SC_LC_DY_CUR_A:PK_BBG_RA_SLS_SC_LC_DY_CUR_A:PROD_DH_WID, ORG_WID, SUPPLIER_WID, DT_WID
--RADM.BBG_RA_SLS_SC_DY_A:PK_BBG_RA_SLS_SC_DY_A:ROW_WID
--RADM.BBG_RA_SLS_IT_DY_A:PK_BBG_RA_SLS_IT_DY_A:PROD_WID, DT_WID, SUPPLIER_WID
--RADM.BBG_RA_SLS_IT_LC_DY_A:PK_BBG_RA_SLS_IT_LC_DY_A:PROD_WID, ORG_WID, DT_WID, SUPPLIER_WID
--RADM.BBG_RA_SLS_IT_DY_SN_A:不需要修改唯一索引
--RADM.BBG_RA_SUPP_SALES_IT_LC_DY_F:不需要修改唯一索引


--汇总表BBG_REFERENCE_DO1字段填充值,并且在表的备注字段上添加说明:Dimension扩展1,BUSINESS_MODE(经营属性)
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120101000 AND 120120131000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120201000 AND 120120229000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120301000 AND 120120331000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120401000 AND 120120430000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120501000 AND 120120531000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120601000 AND 120120630000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120701000 AND 120120731000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120801000 AND 120120831000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120901000 AND 120120930000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121001000 AND 120121031000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121101000 AND 120121130000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121201000 AND 120121231000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

------RADM.BBG_RA_SLS_SC_DY_A
--2012.1-2012.已经跑完了
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120101000 AND 120120131000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120201000 AND 120120229000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120301000 AND 120120331000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120401000 AND 120120430000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120501000 AND 120120531000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120601000 AND 120120630000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120701000 AND 120120731000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120801000 AND 120120831000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120901000 AND 120120930000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121001000 AND 120121031000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121101000 AND 120121130000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121201000 AND 120121231000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--RADM.BBG_RA_SLS_IT_LC_DY_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120101000 AND 120120131000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120201000 AND 120120229000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120301000 AND 120120331000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120401000 AND 120120430000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120501000 AND 120120531000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120601000 AND 120120630000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120701000 AND 120120731000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120801000 AND 120120831000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120901000 AND 120120930000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121001000 AND 120121031000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121101000 AND 120121130000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121201000 AND 120121231000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SLS_IT_DY_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120101000 AND 120120131000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120201000 AND 120120229000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120301000 AND 120120331000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120401000 AND 120120430000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120501000 AND 120120531000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120601000 AND 120120630000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120701000 AND 120120731000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120801000 AND 120120831000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120120901000 AND 120120930000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121001000 AND 120121031000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121101000 AND 120121130000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 = 'N/A'
 WHERE T.DT_WID BETWEEN 120121201000 AND 120121231000
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--修改唯一索引*************************************************************************************
-- BBG_RA_SLS_SC_LC_DY_CUR_A
--Create/Recreate primary, unique and foreign key constraints 
alter table BBG_RA_SLS_SC_LC_DY_CUR_A drop constraint PK_BBG_RA_SLS_SC_LC_DY_CUR_A cascade;
alter table BBG_RA_SLS_SC_LC_DY_CUR_A add constraint PK_BBG_RA_SLS_SC_LC_DY_CUR_A primary key(PROD_DH_WID,
                                                                                              ORG_WID,
                                                                                              SUPPLIER_WID,
                                                                                              DT_WID,
                                                                                              BBG_REFERENCE_DO1)
  using index tablespace RETAIL_DATA pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                minextents 1
                                                                                maxextents
                                                                                unlimited);
--BBG_RA_SLS_IT_DY_A
-- Create/Recreate primary, unique and foreign key constraints 
alter table BBG_RA_SLS_IT_DY_A drop constraint PK_BBG_RA_SLS_IT_DY_A cascade;
alter table BBG_RA_SLS_IT_DY_A add constraint PK_BBG_RA_SLS_IT_DY_A primary key(PROD_WID,
                                                                                DT_WID,
                                                                                SUPPLIER_WID,
                                                                                BBG_REFERENCE_DO1)
  using index tablespace RETAIL_DATA pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                minextents 1
                                                                                maxextents
                                                                                unlimited);

--检查供应商销售数据的汇总情况
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_LC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_LC_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_CL_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_LC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_LC_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_DP_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_DY_SN_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_IT_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_LC_DY_FS T
 WHERE T.SUPPLIER_NUM <> 999999
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_LC_DY_SN_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_IT_LC_DY_SN_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_LC_WK_SN_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_IT_WK_SN_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_LC_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_LC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_SC_LC_DY_CUR_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_SC_LC_DY_RC_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SLS_SC_LC_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_LC_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SLS_SC_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM BBG_RA_SUPP_SALES_IT_LC_DY_F T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_SLS_IT_LC_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;

--**************************************************************
--供应商销售历史数据处理
--RA取数
SELECT /*+PARALLEL(T,20)*/
 TO_DATE(SUBSTR(T.DT_WID, 2, 8), 'YYYYMMDD') DAY_DT,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SUPP_SALES_IT_LC_DY_F T
 WHERE T.DT_WID BETWEEN 120130508000 AND 120141028000
 GROUP BY TO_DATE(SUBSTR(T.DT_WID, 2, 8), 'YYYYMMDD')
 ORDER BY TO_DATE(SUBSTR(T.DT_WID, 2, 8), 'YYYYMMDD');

--RMS取数
SELECT BBG_RA_SUPP_SALES_FV.DAY_DT,
       --供应商净销售成本
       SUM(CASE
             WHEN BBG_RA_SUPP_SALES_FV.BUSINESS_MODE = 'LY' OR
                  BBG_RA_SUPP_SALES_FV.BUSINESS_MODE = 'ZL' THEN
              BBG_RA_SUPP_SALES_FV.SALES_COST /
              (1 + BBG_RA_SUPP_SALES_FV.COST_VAT_RATE / 100)
             ELSE
              BBG_RA_SUPP_SALES_FV.SALES_COST
           END) SUPP_SALES_COST,
       --供应商净销售金额
       SUM(BBG_RA_SUPP_SALES_FV.SALES_AMT /
           (1 + (select VAT_RATE / 100
                   from VAT_ITEM@RA_RMS_DBLINK
                  where ACTIVE_DATE =
                        (select max(v.ACTIVE_DATE)
                           from VAT_ITEM@RA_RMS_DBLINK v
                          where v.ITEM = BBG_RA_SUPP_SALES_FV.ITEM
                            and v.VAT_REGION = 1000
                            AND V.VAT_TYPE IN ('R', 'B')
                            and v.ACTIVE_DATE <= BBG_RA_SUPP_SALES_FV.DAY_DT)
                    and ITEM = BBG_RA_SUPP_SALES_FV.ITEM
                    and VAT_REGION = 1000
                    and VAT_TYPE IN ('R', 'B')))) SUPP_SALES_AMT
  FROM (SELECT /*+PARALLEL(CSS,20)*/
         V_DATE DAY_DT,
         CSS.ITEM,
         CSS.STORE LOC,
         CSS.SUPPLIER,
         CSS.QTY SALES_QTY,
         CSS.TOTAL_COST SALES_COST,
         CSS.TOTAL_RETAIL SALES_AMT,
         (SELECT SUPP.BUSINESS_TYPE
            FROM RMS.CMX_SUPPLIER_INFO@RA_RMS_DBLINK SUPP
           WHERE SUPP.SUPPLIER = CSS.SUPPLIER) BUSINESS_MODE,
         CSS.COST_VAT_RATE,
         (SELECT SUPP.BUSINESS_TYPE
            FROM RMS.CMX_SUPPLIER_INFO@RA_RMS_DBLINK SUPP
           WHERE SUPP.SUPPLIER = CSS.SUPPLIER) BBG_REFERENCE_DO1,
         '' BBG_REFERENCE_DO2,
         '' BBG_REFERENCE_DO3,
         '' BBG_REFERENCE_DO4,
         '' BBG_REFERENCE_DO5,
         NULL BBG_REFERENCE_FO1,
         NULL BBG_REFERENCE_FO2,
         NULL BBG_REFERENCE_FO3,
         NULL BBG_REFERENCE_FO4,
         NULL BBG_REFERENCE_FO5,
         NULL BBG_REFERENCE_FO6,
         NULL BBG_REFERENCE_FO7,
         NULL BBG_REFERENCE_FO8,
         NULL BBG_REFERENCE_FO9,
         NULL BBG_REFERENCE_FO10
          FROM RMS.CMX_SUPP_SALES@RA_RMS_DBLINK CSS) BBG_RA_SUPP_SALES_FV
 WHERE BBG_RA_SUPP_SALES_FV.DAY_DT BETWEEN DATE '2013-05-08' AND DATE
 '2014-10-28'
 GROUP BY BBG_RA_SUPP_SALES_FV.DAY_DT;

--update 供应商销售汇总表的BBG_REFERENCE_DO1经营属性
/*
BBG_RA_SLS_CL_DY_CUR_A
BBG_RA_SLS_CL_LC_DY_A
BBG_RA_SLS_CL_LC_DY_CUR_A
BBG_RA_SLS_DP_DY_CUR_A
BBG_RA_SLS_DP_LC_DY_A
BBG_RA_SLS_DP_LC_DY_CUR_A
BBG_RA_SLS_IT_DY_A
BBG_RA_SLS_IT_DY_SN_A
BBG_RA_SLS_IT_LC_DY_A
BBG_RA_SLS_IT_LC_DY_SN_A
BBG_RA_SLS_LC_DY_A
BBG_RA_SLS_SC_DY_A
BBG_RA_SLS_SC_DY_CUR_A
BBG_RA_SLS_SC_LC_DY_A
BBG_RA_SLS_SC_LC_DY_CUR_A
BBG_RA_SUPP_SALES_IT_LC_DY_F
*/
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_CL_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_CL_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_CL_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_DP_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_DP_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_DP_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_DY_SN_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_IT_LC_DY_SN_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_SALES_IT_LC_DY_F T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--检查BBG_REFERENCE_DO1取值范围
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_CL_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_CL_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_CL_LC_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_DP_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_DP_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_DP_LC_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_IT_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_IT_DY_SN_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_IT_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_IT_LC_DY_SN_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_SC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_SC_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_SC_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SLS_SC_LC_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM BBG_RA_SUPP_SALES_IT_LC_DY_F T;

--************************************************************************************************
--************************************************************************************************
--4、供应商库存部分
--************************************************************************************************
--************************************************************************************************
--供应商库存的ODI接口修改完毕,但是要处理BBG_RA_SUPP_INV_IT_LC_G表的经营属性,因为汇总表都是来源此表
--创建供应商经营属性临时表
CREATE TABLE RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP AS
  SELECT P.ROW_WID SUPPLIER_WID, T.SUPPLIER SUPPLIER_NUM, T.BUSINESS_TYPE
    FROM RMS.CMX_SUPPLIER_INFO@RA_RMS_DBLINK T, RADM.W_PARTY_ORG_D P
   WHERE T.SUPPLIER = P.SUPPLIER_NUM
     AND T.BUSINESS_TYPE IS NOT NULL;

--删除供应商经营属性临时表
DROP TABLE RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP;

--处理RADM.BBG_RA_SUPP_INV_IT_LC_G G的经营属性
UPDATE /*+PARALLEL(G,20)*/ RADM.BBG_RA_SUPP_INV_IT_LC_G G
   SET G.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE G.SUPPLIER_NUM = S.SUPPLIER)
 WHERE G.BBG_REFERENCE_DO1 IS NULL;

--************************************************************************************************
--************************************************************************************************
--4.1、供应商库存表历史数据处理 
--************************************************************************************************
--************************************************************************************************
/*
BBG_RA_SUP_INV_IT_LC_DY_FS
BBG_RA_SUPP_INV_CL_LC_DY_A     OK
BBG_RA_SUPP_INV_CL_LC_WK_A
BBG_RA_SUPP_INV_DP_LC_DY_A     OK
BBG_RA_SUPP_INV_DP_LC_WK_A
BBG_RA_SUPP_INV_IT_DY_A        OK
BBG_RA_SUPP_INV_IT_DY_TMP
BBG_RA_SUPP_INV_IT_LC_DY_F     OK
BBG_RA_SUPP_INV_IT_LC_DY_TMP
BBG_RA_SUPP_INV_IT_LC_G        OK
BBG_RA_SUPP_INV_IT_WK_A
BBG_RA_SUPP_INV_SC_DY_A        OK
BBG_RA_SUPP_INV_SC_DY_CUR_A    OK
BBG_RA_SUPP_INV_SC_DY_RC_TMP
BBG_RA_SUPP_INV_SC_LC_DY_A     OK
BBG_RA_SUPP_INV_SC_LC_DY_TMP
BBG_RA_SUPP_INV_SC_LC_WK_A
BBG_RA_SUPP_INV_SC_WK_A
BBG_RA_SUPP_INV_SC_WK_CUR_A
BBG_RA_SUPP_INV_SC_WK_RC_TMP
*/

--BBG_RA_SUPP_INV_CL_LC_DY_A 
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_CL_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_DP_LC_DY_A 
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_DP_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_IT_DY_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_IT_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_IT_LC_DY_F
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_IT_LC_DY_F T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_SC_DY_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_SC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_SC_DY_CUR_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--BBG_RA_SUPP_INV_SC_LC_DY_A
UPDATE /*+PARALLEL(T,20)*/ RADM.BBG_RA_SUPP_INV_SC_LC_DY_A T
   SET T.BBG_REFERENCE_DO1 =
       (SELECT /*+PARALLEL(S,20)*/
         S.BUSINESS_TYPE
          FROM RADM.JIN_RA_CMX_SUPPLIER_INFO_TMP S
         WHERE T.SUPPLIER_WID = S.SUPPLIER_WID)
 WHERE T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--检查供应商库存表是否有经营属性为空的字段
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUP_INV_IT_LC_DY_FS T
 WHERE T.SUPPLIER_NUM <> 999999
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_CL_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_CL_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_DP_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_DP_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_IT_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_INV_IT_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_DY_F T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_INV_IT_LC_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_G T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_IT_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_DY_RC_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_LC_DY_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_LC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_WK_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RADM.BBG_RA_SUPP_INV_SC_WK_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
SELECT /*+PARALLEL(T,20)*/
 *
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_WK_RC_TMP T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;

--检查BBG_REFERENCE_DO1取值范围
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUP_INV_IT_LC_DY_FS T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_CL_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_CL_LC_WK_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_DP_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_DP_LC_WK_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_IT_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RABATCHER.BBG_RA_SUPP_INV_IT_DY_TMP T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_DY_F T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RABATCHER.BBG_RA_SUPP_INV_IT_LC_DY_TMP T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_IT_LC_G T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_IT_WK_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_DY_RC_TMP T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_LC_DY_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_LC_DY_TMP T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_LC_WK_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_WK_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RADM.BBG_RA_SUPP_INV_SC_WK_CUR_A T;
SELECT /*+PARALLEL(T,20)*/
DISTINCT T.BBG_REFERENCE_DO1
  FROM RABATCHER.BBG_RA_SUPP_INV_SC_WK_RC_TMP T;


--删除BBG_REFERENCE_DO1为空的,并且不是999999供应商的纪录
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_CL_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_DP_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_IT_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_IT_LC_DY_F T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_IT_LC_G T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_SC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;
DELETE /*+PARALLEL(T,20)*/
RADM.BBG_RA_SUPP_INV_SC_LC_DY_A T
 WHERE T.SUPPLIER_WID <> 38714
   AND T.BBG_REFERENCE_DO1 IS NULL;
COMMIT;

--************************************************************************************************
--************************************************************************************************
--************************************************************************************************
--临时方案
-- Create table
--此表由苏锦宏插入数据
--rms:CMX_RPT_INV_DAYS_TMP
create table RADM.JIN_BBG_RA_INV_DAYS_FS(month VARCHAR2(20),
                                         catalog NUMBER,
                                         loc NUMBER(10) not null,
                                         loc_type VARCHAR2(2),
                                         div NUMBER NOT NULL,
                                         dept NUMBER NOT NULL,
                                         class NUMBER(4) not null,
                                         subclass NUMBER(4) NOT NULL,
                                         business_type VARCHAR2(6),
                                         soh_amt NUMBER,
                                         total_cost NUMBER) tablespace DM_FACT_DATA pctfree 10 initrans 1 maxtrans 255 storage(initial 64K next 1M
                                                                                                                               minextents 1
                                                                                                                               maxextents
                                                                                                                               unlimited);
-- Create/Recreate indexes 
create unique index PK_JIN_BBG_RA_INV_DAYS_FS on JIN_BBG_RA_INV_DAYS_FS(MONTH,
                                                                        CATALOG,
                                                                        LOC,
                                                                        DEPT,
                                                                        CLASS,
                                                                        SUBCLASS,
                                                                        BUSINESS_TYPE) tablespace DM_FACT_INDEX pctfree 10 initrans 2 maxtrans 255 storage(initial 64K next 1M
                                                                                                                                                           minextents 1
                                                                                                                                                           maxextents
                                                                                                                                                           unlimited);

--转换loc\div\dept\class\subclass视图
SELECT SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2) MN_WID,
       CATALOG,
       O.ORG_WID,
       OH.ORG_LC_WID ORG_DH_WID,
       O.ORG_SCD1_WID,
       (SELECT C.ROW_WID
          FROM RADM.W_PROD_CAT_DH C
         WHERE C.LVL8ANC_PRODCAT_ID = F.DIV
           AND C.LEVEL_NAME = 'DIV') DIV,
       (SELECT C.ROW_WID
          FROM RADM.W_PROD_CAT_DH C
         WHERE C.LVL6ANC_PRODCAT_ID = F.DEPT
           AND C.LEVEL_NAME = 'DEPT') DEPT,
       (SELECT C.ROW_WID
          FROM RADM.W_PROD_CAT_DH C
         WHERE C.LVL5ANC_PRODCAT_ID = F.CLASS
           AND C.LEVEL_NAME = 'CLS') CLS,
       (SELECT C.ROW_WID
          FROM RADM.W_PROD_CAT_DH C3
         WHERE C.LVL4ANC_PRODCAT_ID = F.SUBCLASS
           AND C.LEVEL_NAME = 'SBC') SBC
  FROM RADM.JIN_BBG_RA_INV_DAYS_FS    F,
       RABATCHER.W_INT_ORG_DH_RTL_TMP OH,
       RABATCHER.W_INT_ORG_D_RTL_TMP  O
 WHERE F.LOC = OH.ORG_NUM
   AND F.LOC = O.ORG_NUM
   AND OH.CURRENT_FLG = 'Y'
   AND O.CURRENT_FLG = 'Y'
   AND F.DIV <> 4;
--JIN_BBG_RA_INVSLS_BM_SC_LC_MN_FV
CREATE OR REPLACE VIEW RADM.JIN_RA_INVSLS_BM_SC_LC_MN_FV AS
  SELECT TO_NUMBER(SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2)) MN_WID,
         CATALOG,
         O.ORG_WID,
         OH.ORG_LC_WID ORG_DH_WID,
         O.ORG_SCD1_WID,
         F.LOC_TYPE,
         CASE
           WHEN F.BUSINESS_TYPE = 'JX' THEN
            '经销'
           WHEN F.BUSINESS_TYPE = 'DX' THEN
            '代销'
         END BUSINESS_TYPE,
         (SELECT C.ROW_WID
            FROM RADM.W_PROD_CAT_DH C
           WHERE C.LVL4ANC_PRODCAT_ID = F.SUBCLASS
             AND C.LEVEL_NAME = 'SBC') PROD_DH_WID,
         SUM(F.SOH_AMT) INV_SOH_COST_AMT,
         SUM(F.TOTAL_COST) SLS_NOTAX_COST
    FROM RADM.JIN_BBG_RA_INV_DAYS_FS    F,
         RABATCHER.W_INT_ORG_DH_RTL_TMP OH,
         RABATCHER.W_INT_ORG_D_RTL_TMP  O
   WHERE F.LOC = OH.ORG_NUM
     AND F.LOC = O.ORG_NUM
     AND OH.CURRENT_FLG = 'Y'
     AND O.CURRENT_FLG = 'Y'
     AND F.DIV <> 4
   GROUP BY SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2),
            CATALOG,
            O.ORG_WID,
            OH.ORG_LC_WID,
            O.ORG_SCD1_WID,
            F.SUBCLASS,
            F.LOC_TYPE,
            F.BUSINESS_TYPE;
--JIN_BBG_RA_INVSLS_BM_CL_LC_MN_FV
CREATE OR REPLACE VIEW RADM.JIN_RA_INVSLS_BM_CL_LC_MN_FV AS
  SELECT TO_NUMBER(SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2)) MN_WID,
         CATALOG,
         O.ORG_WID,
         OH.ORG_LC_WID ORG_DH_WID,
         O.ORG_SCD1_WID,
         F.LOC_TYPE,
         CASE
           WHEN F.BUSINESS_TYPE = 'JX' THEN
            '经销'
           WHEN F.BUSINESS_TYPE = 'DX' THEN
            '代销'
         END BUSINESS_TYPE,
         (SELECT C.ROW_WID
            FROM RADM.W_PROD_CAT_DH C
           WHERE C.LVL5ANC_PRODCAT_ID = F.CLASS
             AND C.LEVEL_NAME = 'CLS') PROD_DH_WID,
         SUM(F.SOH_AMT) INV_SOH_COST_AMT,
         SUM(F.TOTAL_COST) SLS_NOTAX_COST
    FROM RADM.JIN_BBG_RA_INV_DAYS_FS    F,
         RABATCHER.W_INT_ORG_DH_RTL_TMP OH,
         RABATCHER.W_INT_ORG_D_RTL_TMP  O
   WHERE F.LOC = OH.ORG_NUM
     AND F.LOC = O.ORG_NUM
     AND OH.CURRENT_FLG = 'Y'
     AND O.CURRENT_FLG = 'Y'
     AND F.DIV <> 4
   GROUP BY SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2),
            CATALOG,
            O.ORG_WID,
            OH.ORG_LC_WID,
            O.ORG_SCD1_WID,
            F.CLASS,
            F.LOC_TYPE,
            F.BUSINESS_TYPE;
--JIN_BBG_RA_INVSLS_BM_DP_LC_MN_FV
CREATE OR REPLACE VIEW RADM.JIN_RA_INVSLS_BM_DP_LC_MN_FV AS
  SELECT TO_NUMBER(SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2)) MN_WID,
         CATALOG,
         O.ORG_WID,
         OH.ORG_LC_WID ORG_DH_WID,
         O.ORG_SCD1_WID,
         F.LOC_TYPE,
         CASE
           WHEN F.BUSINESS_TYPE = 'JX' THEN
            '经销'
           WHEN F.BUSINESS_TYPE = 'DX' THEN
            '代销'
         END BUSINESS_TYPE,
         (SELECT C.ROW_WID
            FROM RADM.W_PROD_CAT_DH C
           WHERE C.LVL6ANC_PRODCAT_ID = F.DEPT
             AND C.LEVEL_NAME = 'DEPT') PROD_DH_WID,
         SUM(F.SOH_AMT) INV_SOH_COST_AMT,
         SUM(F.TOTAL_COST) SLS_NOTAX_COST
    FROM RADM.JIN_BBG_RA_INV_DAYS_FS    F,
         RABATCHER.W_INT_ORG_DH_RTL_TMP OH,
         RABATCHER.W_INT_ORG_D_RTL_TMP  O
   WHERE F.LOC = OH.ORG_NUM
     AND F.LOC = O.ORG_NUM
     AND OH.CURRENT_FLG = 'Y'
     AND O.CURRENT_FLG = 'Y'
     AND F.DIV <> 4
   GROUP BY SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2),
            CATALOG,
            O.ORG_WID,
            OH.ORG_LC_WID,
            O.ORG_SCD1_WID,
            F.DEPT,
            F.LOC_TYPE,
            F.BUSINESS_TYPE;
--JIN_BBG_RA_INVSLS_BM_DV_LC_MN_FV
CREATE OR REPLACE VIEW RADM.JIN_RA_INVSLS_BM_DV_LC_MN_FV AS
  SELECT TO_NUMBER(SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2)) MN_WID,
         CATALOG,
         O.ORG_WID,
         OH.ORG_LC_WID ORG_DH_WID,
         O.ORG_SCD1_WID,
         F.LOC_TYPE,
         CASE
           WHEN F.BUSINESS_TYPE = 'JX' THEN
            '经销'
           WHEN F.BUSINESS_TYPE = 'DX' THEN
            '代销'
         END BUSINESS_TYPE,
         (SELECT C.ROW_WID
            FROM RADM.W_PROD_CAT_DH C
           WHERE C.LVL8ANC_PRODCAT_ID = F.DIV
             AND C.LEVEL_NAME = 'DIV') PROD_DH_WID,
         SUM(F.SOH_AMT) INV_SOH_COST_AMT,
         SUM(F.TOTAL_COST) SLS_NOTAX_COST
    FROM RADM.JIN_BBG_RA_INV_DAYS_FS    F,
         RABATCHER.W_INT_ORG_DH_RTL_TMP OH,
         RABATCHER.W_INT_ORG_D_RTL_TMP  O
   WHERE F.LOC = OH.ORG_NUM
     AND F.LOC = O.ORG_NUM
     AND OH.CURRENT_FLG = 'Y'
     AND O.CURRENT_FLG = 'Y'
     AND F.DIV <> 4
   GROUP BY SUBSTR(F.MONTH, 1, 4) || SUBSTR(F.MONTH, 6, 2),
            CATALOG,
            O.ORG_WID,
            OH.ORG_LC_WID,
            O.ORG_SCD1_WID,
            F.DIV,
            F.LOC_TYPE,
            F.BUSINESS_TYPE;

--
SELECT * FROM RADM.JIN_RA_INVSLS_BM_SC_LC_MN_FV;
SELECT * FROM RADM.JIN_RA_INVSLS_BM_CL_LC_MN_FV;
SELECT * FROM RADM.JIN_RA_INVSLS_BM_DP_LC_MN_FV;
SELECT * FROM RADM.JIN_RA_INVSLS_BM_DV_LC_MN_FV;
--检查视图是否有重复值
SELECT T.MN_WID,
       T.CATALOG,
       T.ORG_WID,
       T.ORG_DH_WID,
       T.ORG_SCD1_WID,
       T.PROD_DH_WID
  FROM RADM.JIN_RA_INVSLS_BM_DV_LC_MN_FV T
 GROUP BY T.MN_WID,
          T.CATALOG,
          T.ORG_WID,
          T.ORG_DH_WID,
          T.ORG_SCD1_WID,
          T.PROD_DH_WID
HAVING COUNT(*) > 1;
--插入中文说明
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_BUSINESS_TYPE
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_BUSINESS_TYPE
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_LOC_TYPE
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_LOC_TYPE
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_CATALOG
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_CATALOG
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_INV_SOH_COST_AMT
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_INV_SOH_COST_AMT
--CN_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_SLS_NOTAX_COST
--CD_Retail_As-Was_BBG_INV_SLS_by_bussiness_mode_SLS_NOTAX_COST
SELECT *
  FROM RADM.W_LOCALIZED_STRING_G T
 WHERE T.MSG_NUM LIKE '%Retail_As-Was_BBG_INV_SLS_by_bussiness_mode%'
   FOR UPDATE;

--核查数据***************************************************************************************
--RMS:CMX_RPT_INV_DAYS_TMP
SELECT *
  FROM CMX.CMX_RPT_INV_DAYS_TMP@RA_RMS_DBLINK RMS,
       (SELECT F.MONTH,
               F.CATALOG,
               F.LOC,
               F.LOC_TYPE,
               F.DIV,
               F.DEPT,
               F.CLASS,
               F.BUSINESS_TYPE,
               SUM(F.SOH_AMT) SOH_AMT,
               SUM(F.TOTAL_COST) TOTAL_COST
          FROM RADM.JIN_BBG_RA_INV_DAYS_FS F
         GROUP BY F.MONTH,
                  F.CATALOG,
                  F.LOC,
                  F.LOC_TYPE,
                  F.DIV,
                  F.DEPT,
                  F.CLASS,
                  F.BUSINESS_TYPE) RA
 WHERE RMS.MONTH = RA.MONTH
   AND RMS.CATALOG = RA.CATALOG
   AND RMS.LOC = RA.LOC
   AND RMS.LOC_TYPE = RA.LOC_TYPE
   AND RMS.DIV = RA.DIV
   AND RMS.DEPT = RA.DEPT
   AND RMS.CLASS = RA.CLASS
   AND RMS.BUSINESS_TYPE = RA.BUSINESS_TYPE
   AND (ROUND(RMS.SOH_AMT, 4) <> ROUND(RA.SOH_AMT, 4) OR
       ROUND(RMS.TOTAL_COST, 4) <> ROUND(RA.TOTAL_COST, 4));

--tmp
SELECT * FROM RADM.JIN_BBG_RA_INV_DAYS_FS T;
SELECT DISTINCT BUSINESS_TYPE FROM CMX.CMX_RPT_INV_DAYS_TMP@RA_RMS_DBLINK;

SELECT T.ORG_NUM, COUNT(*)
  FROM RABATCHER.W_INT_ORG_DH_RTL_TMP T
 WHERE T.CURRENT_FLG = 'Y'
 GROUP BY T.ORG_NUM
HAVING COUNT(*) > 1;

SELECT * FROM RABATCHER.W_INT_ORG_DH_RTL_TMP T;
SELECT * FROM RADM.W_PROD_CAT_DH T WHERE T.LEVEL_NAME = 'DIV';
SELECT DISTINCT T.DIV FROM RADM.JIN_BBG_RA_INV_DAYS_FS T;
SELECT * FROM RADM.JIN_BBG_RA_INV_DAYS_FS;

SELECT * FROM RADM.W_INT_ORG_DH T;

SELECT * FROM RADM.BBG_RA_SLS_IT_LC_DY_FS;

SELECT * FROM RADM.W_RTL_INV_IT_LC_G;
