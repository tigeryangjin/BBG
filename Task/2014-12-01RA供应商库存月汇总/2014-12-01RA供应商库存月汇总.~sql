/*
说明:供应商库存月汇总有5张物化视图,但是物化视图不允许使用子查询,
故把这5张物化视图转化成table,然后再通过merge方式写入table
*/
--1.RADM.BBG_RA_SUPP_INV_CL_LC_MN_A----------------------------------------------------------------
CREATE TABLE RADM.TEMP_A  AS  
SELECT /*+PARALLEL(A,20)*/ A.PROD_DH_WID,
        A.ORG_WID,
        A.SUPPLIER_WID,
        SUBSTR(A.DT_WID, 2, 6)  MN_WID,
        MAX(A.DT_WID) DT_WID
   FROM RADM.BBG_RA_SUPP_INV_CL_LC_DY_A A
  GROUP BY A.PROD_DH_WID,
           A.SUPPLIER_WID,
           SUBSTR(A.DT_WID, 2, 6),
           A.ORG_WID;

DROP TABLE RADM.TEMP_A;

--月合计库存数量和库存成本
CREATE TABLE RADM.TEMP_B AS 					 
SELECT /*+PARALLEL(I,20)*/
 I.PROD_DH_WID,
 I.ORG_WID,
 SUBSTR(TO_CHAR(I.DT_WID), 2, 6) MN_WID,
 I.SUPPLIER_WID,
 SUM(I.SUPP_INV_QTY) SUM_SUPP_INV_QTY,
 SUM(I.SUPP_INV_COST) SUM_SUPP_INV_COST
  FROM BBG_RA_SUPP_INV_CL_LC_DY_A I
 GROUP BY I.PROD_DH_WID,
          I.ORG_WID,
          SUBSTR(TO_CHAR(I.DT_WID), 2, 6),
          I.SUPPLIER_WID;
--创建唯一索引
CREATE UNIQUE INDEX PK_TEMP_B ON RADM.TEMP_B (PROD_DH_WID, ORG_WID, MN_WID, SUPPLIER_WID);

DROP TABLE RADM.TEMP_B;

--创建table
CREATE TABLE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A_T NOLOGGING
AS  
SELECT * FROM RADM.BBG_RA_SUPP_INV_CL_LC_MN_A;

DROP TABLE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A_T;

--添加SUM_SUPP_INV_QTY,SUM_SUPP_INV_COST列
ALTER TABLE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A ADD ( SUM_SUPP_INV_QTY NUMBER,SUM_SUPP_INV_COST NUMBER);
ALTER TABLE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A ADD ( W_INSERT_DT DATE,W_UPDATE_DT DATE);



--1.MERGE SUPP_INV_QTY/SUPP_INV_COST/SUM_SUPP_INV_QTY/SUM_SUPP_INV_QTY 
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SUPP_INV_CL_LC_MN_A T
USING (SELECT /*+ PARALLEL(T,20)*/
        A.PROD_DH_WID,
        A.ORG_WID,
        MAX(A.ORG_DH_WID) ORG_DH_WID,
        MAX(A.ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(A.DT_WID), 2, 6) MN_WID,
        A.SUPPLIER_WID,
        SUM(NVL(A.SUPP_INV_QTY, 0)) SUPP_INV_QTY,
        SUM(NVL(A.SUPP_INV_COST, 0)) SUPP_INV_COST,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_QTY, 0) SUM_SUPP_INV_QTY
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_QTY,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_COST, 0) SUM_SUPP_INV_COST
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_COST,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(A.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(A.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(A.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(A.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(A.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(A.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(A.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(A.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(A.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(A.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(A.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(A.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(A.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(A.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(A.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10,
        MAX(SUBSTR(A.INTEGRATION_ID, 1, INSTR(A.INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(A.DT_WID), 2, 6) ||
            SUBSTR(A.INTEGRATION_ID,
                   INSTR(A.INTEGRATION_ID, '~', 1, 3),
                   LENGTH(A.INTEGRATION_ID))) INTEGRATION_ID
         FROM RADM.BBG_RA_SUPP_INV_CL_LC_DY_A A
        WHERE EXISTS (SELECT /*+PARALLEL(A,20)*/
                TA.PROD_DH_WID, TA.ORG_WID, TA.DT_WID
                 FROM RADM.TEMP_A TA
                WHERE TA.PROD_DH_WID = A.PROD_DH_WID
                  AND TA.ORG_WID = A.ORG_WID
                  AND TA.DT_WID = A.DT_WID
                  AND TA.SUPPLIER_WID = A.SUPPLIER_WID)
          AND EXISTS (SELECT 1
                 FROM (SELECT MAX(DT_WID) DT_WID FROM RADM.TEMP_A) MA
                WHERE MA.DT_WID = A.DT_WID)
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.ORG_DH_WID         = S.ORG_DH_WID,
         T.ORG_SCD1_WID       = S.ORG_SCD1_WID,
         T.SUPP_INV_QTY       = S.SUPP_INV_QTY,
         T.SUPP_INV_COST      = S.SUPP_INV_COST,
         T.SUM_SUPP_INV_QTY   = S.SUM_SUPP_INV_QTY,
         T.SUM_SUPP_INV_COST  = S.SUM_SUPP_INV_COST,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.INTEGRATION_ID     = S.INTEGRATION_ID
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_INV_QTY,
     T.SUPP_INV_COST,
     T.SUM_SUPP_INV_QTY,
     T.SUM_SUPP_INV_COST,
     T.W_INSERT_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10,
     T.INTEGRATION_ID)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_INV_QTY,
     S.SUPP_INV_COST,
     S.SUM_SUPP_INV_QTY,
     S.SUM_SUPP_INV_COST,
     S.W_INSERT_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10,
     S.INTEGRATION_ID);
 
--1.update BBG_RA_SUPP_INV_CL_LC_MN_A history sum data
UPDATE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A A
   SET (A.SUM_SUPP_INV_QTY, A.SUM_SUPP_INV_COST, A.W_UPDATE_DT) =
       (SELECT B.SUM_SUPP_INV_QTY, B.SUM_SUPP_INV_COST, SYSDATE
          FROM RADM.TEMP_B B
         WHERE A.PROD_DH_WID = B.PROD_DH_WID
           AND A.ORG_WID = B.ORG_WID
           AND A.MN_WID = B.MN_WID
           AND A.SUPPLIER_WID = B.SUPPLIER_WID)
 WHERE A.SUM_SUPP_INV_QTY IS NULL
    OR A.SUM_SUPP_INV_COST IS NULL;
COMMIT;

--2.BBG_RA_SUPP_INV_DP_LC_MN_A-------------------------------------------------------------------------
--RADM.TEMP_A
CREATE TABLE RADM.TEMP_A  AS  
SELECT /*+PARALLEL(A,20)*/ A.PROD_DH_WID,
        A.ORG_WID,
        A.SUPPLIER_WID,
        SUBSTR(A.DT_WID, 2, 6)  MN_WID,
        MAX(A.DT_WID) DT_WID
   FROM RADM.BBG_RA_SUPP_INV_DP_LC_DY_A A
  GROUP BY A.PROD_DH_WID,
           A.SUPPLIER_WID,
           SUBSTR(A.DT_WID, 2, 6),
           A.ORG_WID
					 
DROP TABLE RADM.TEMP_A;

--RADM.TEMP_B
CREATE TABLE RADM.TEMP_B  AS  
SELECT /*+PARALLEL(B,20)*/
 B.PROD_DH_WID,
 B.ORG_WID,
 B.SUPPLIER_WID,
 SUBSTR(B.DT_WID, 2, 6) MN_WID,
 SUM(B.SUPP_INV_QTY) SUM_SUPP_INV_QTY,
 SUM(B.SUPP_INV_COST) SUM_SUPP_INV_COST
  FROM RADM.BBG_RA_SUPP_INV_DP_LC_DY_A B
 GROUP BY B.PROD_DH_WID, B.SUPPLIER_WID, SUBSTR(B.DT_WID, 2, 6), B.ORG_WID

DROP TABLE RADM.TEMP_B;

--CREATE UNIQUE INDEX PK_TEMP_B
CREATE UNIQUE INDEX PK_TEMP_B ON RADM.TEMP_B (PROD_DH_WID, ORG_WID, MN_WID, SUPPLIER_WID)
 
--CREATE TABLE
CREATE TABLE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A_T NOLOGGING
AS
SELECT * FROM RADM.BBG_RA_SUPP_INV_DP_LC_MN_A;

DROP TABLE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A_T;

ALTER TABLE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A ADD ( SUM_SUPP_INV_QTY NUMBER,SUM_SUPP_INV_COST NUMBER);
ALTER TABLE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A ADD ( W_INSERT_DT DATE,W_UPDATE_DT DATE);

--2.MERGE TABLE
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SUPP_INV_DP_LC_MN_A T
USING (SELECT /*+ PARALLEL(A,20)*/
        A.PROD_DH_WID,
        A.ORG_WID,
        MAX(A.ORG_DH_WID) ORG_DH_WID,
        MAX(A.ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(A.DT_WID), 2, 6) MN_WID,
        A.SUPPLIER_WID,
        SUM(NVL(A.SUPP_INV_QTY, 0)) SUPP_INV_QTY,
        SUM(NVL(A.SUPP_INV_COST, 0)) SUPP_INV_COST,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_QTY, 0) SUM_SUPP_INV_QTY
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_QTY,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_COST, 0) SUM_SUPP_INV_COST
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_COST,
        MAX(SUBSTR(A.INTEGRATION_ID, 1, INSTR(A.INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(A.DT_WID), 2, 6) ||
            SUBSTR(A.INTEGRATION_ID,
                   INSTR(A.INTEGRATION_ID, '~', 1, 3),
                   LENGTH(A.INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(A.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(A.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(A.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(A.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(A.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(A.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(A.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(A.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(A.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(A.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(A.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(A.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(A.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(A.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(A.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SUPP_INV_DP_LC_DY_A A
        WHERE EXISTS (SELECT /*+PARALLEL(TA,20)*/
                A.PROD_DH_WID, A.ORG_WID, A.DT_WID
                 FROM RADM.TEMP_A TA
                WHERE A.PROD_DH_WID = TA.PROD_DH_WID
                  AND A.ORG_WID = TA.ORG_WID
                  AND A.DT_WID = TA.DT_WID
                  AND A.SUPPLIER_WID = TA.SUPPLIER_WID)
          AND EXISTS (SELECT 1
                 FROM (SELECT MAX(DT_WID) DT_WID FROM RADM.TEMP_A) MA
                WHERE MA.DT_WID = A.DT_WID)
        GROUP BY A.PROD_DH_WID,
                 A.ORG_WID,
                 SUBSTR(TO_CHAR(A.DT_WID), 2, 6),
                 A.SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.ORG_DH_WID         = S.ORG_DH_WID,
         T.ORG_SCD1_WID       = S.ORG_SCD1_WID,
         T.SUPP_INV_QTY       = S.SUPP_INV_QTY,
         T.SUPP_INV_COST      = S.SUPP_INV_COST,
         T.SUM_SUPP_INV_QTY   = S.SUM_SUPP_INV_QTY,
         T.SUM_SUPP_INV_COST  = S.SUM_SUPP_INV_COST,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.INTEGRATION_ID     = S.INTEGRATION_ID
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_INV_QTY,
     T.SUPP_INV_COST,
     T.SUM_SUPP_INV_QTY,
     T.SUM_SUPP_INV_COST,
     T.W_INSERT_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10,
     T.INTEGRATION_ID)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_INV_QTY,
     S.SUPP_INV_COST,
     S.SUM_SUPP_INV_QTY,
     S.SUM_SUPP_INV_COST,
     S.W_INSERT_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10,
     S.INTEGRATION_ID);


--2.update BBG_RA_SUPP_INV_DP_LC_MN_A history sum data
UPDATE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A A
   SET (A.SUM_SUPP_INV_QTY, A.SUM_SUPP_INV_COST, A.W_UPDATE_DT) =
       (SELECT B.SUM_SUPP_INV_QTY, B.SUM_SUPP_INV_COST, SYSDATE
          FROM RADM.TEMP_B B
         WHERE A.PROD_DH_WID = B.PROD_DH_WID
           AND A.ORG_WID = B.ORG_WID
           AND A.MN_WID = B.MN_WID
           AND A.SUPPLIER_WID = B.SUPPLIER_WID)
 WHERE A.SUM_SUPP_INV_QTY IS NULL
    OR A.SUM_SUPP_INV_COST IS NULL;
COMMIT;
		 
--3.RADM.BBG_RA_SUPP_INV_SC_MN_A----------------------------------------------------------------------
--RADM.TEMP_A
CREATE TABLE RADM.TEMP_A  AS  
SELECT /*+PARALLEL(A,20)*/ A.PROD_DH_WID,
        A.SUPPLIER_WID,
        SUBSTR(A.DT_WID, 2, 6)  MN_WID,
        MAX(A.DT_WID) DT_WID
   FROM RADM.BBG_RA_SUPP_INV_SC_DY_A A
  GROUP BY A.PROD_DH_WID,
           A.SUPPLIER_WID,
           SUBSTR(A.DT_WID, 2, 6)
					 
DROP TABLE RADM.TEMP_A;					 
					 
--RADM.TEMP_B
CREATE TABLE RADM.TEMP_B  AS  
SELECT /*+PARALLEL(B,20)*/
 B.PROD_DH_WID,
 B.SUPPLIER_WID,
 SUBSTR(B.DT_WID, 2, 6) MN_WID,
 SUM(B.SUPP_INV_QTY) SUM_SUPP_INV_QTY,
 SUM(B.SUPP_INV_COST) SUM_SUPP_INV_COST
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_A B
 GROUP BY B.PROD_DH_WID, B.SUPPLIER_WID, SUBSTR(B.DT_WID, 2, 6)
 
DROP TABLE RADM.TEMP_B;					 
 
--CREATE UNIQUE INDEX PK_TEMP_B
CREATE UNIQUE INDEX PK_TEMP_B ON RADM.TEMP_B (PROD_DH_WID, MN_WID, SUPPLIER_WID)
 
--CREATE TABLE
CREATE TABLE RADM.BBG_RA_SUPP_INV_SC_MN_A_T NOLOGGING
AS
SELECT * FROM RADM.BBG_RA_SUPP_INV_SC_MN_A;

DROP TABLE RADM.BBG_RA_SUPP_INV_SC_MN_A_T;

ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_A ADD ( SUM_SUPP_INV_QTY NUMBER,SUM_SUPP_INV_COST NUMBER);
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_A ADD ( W_INSERT_DT DATE,W_UPDATE_DT DATE);

--3.MERGE TABLE
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SUPP_INV_SC_MN_A T
USING (SELECT /*+ PARALLEL(A,20)*/
        A.PROD_DH_WID,
        SUBSTR(TO_CHAR(A.DT_WID), 2, 6) MN_WID,
        A.SUPPLIER_WID,
        SUM(NVL(A.SUPP_INV_QTY, 0)) SUPP_INV_QTY,
        SUM(NVL(A.SUPP_INV_COST, 0)) SUPP_INV_COST,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_QTY, 0) SUM_SUPP_INV_QTY
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_QTY,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_COST, 0) SUM_SUPP_INV_COST
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_COST,
        MAX(SUBSTR(A.INTEGRATION_ID, 1, INSTR(A.INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(A.DT_WID), 2, 6) ||'~'||
            SUBSTR(A.INTEGRATION_ID,
                   INSTR(A.INTEGRATION_ID, '~', 1, 2),
                   LENGTH(A.INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(A.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(A.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(A.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(A.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(A.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(A.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(A.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(A.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(A.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(A.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(A.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(A.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(A.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(A.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(A.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SUPP_INV_SC_DY_A A
        WHERE EXISTS (SELECT /*+PARALLEL(TA,20)*/
                A.PROD_DH_WID, A.DT_WID
                 FROM RADM.TEMP_A TA
                WHERE A.PROD_DH_WID = TA.PROD_DH_WID
                  AND A.DT_WID = TA.DT_WID
                  AND A.SUPPLIER_WID = TA.SUPPLIER_WID)
          AND EXISTS (SELECT 1
                 FROM (SELECT MAX(DT_WID) DT_WID FROM RADM.TEMP_A) MA
                WHERE MA.DT_WID = A.DT_WID)
        GROUP BY A.PROD_DH_WID,
                 SUBSTR(TO_CHAR(A.DT_WID), 2, 6),
                 A.SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_INV_QTY       = S.SUPP_INV_QTY,
         T.SUPP_INV_COST      = S.SUPP_INV_COST,
         T.SUM_SUPP_INV_QTY   = S.SUM_SUPP_INV_QTY,
         T.SUM_SUPP_INV_COST  = S.SUM_SUPP_INV_COST,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.INTEGRATION_ID     = S.INTEGRATION_ID
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_INV_QTY,
     T.SUPP_INV_COST,
     T.SUM_SUPP_INV_QTY,
     T.SUM_SUPP_INV_COST,
     T.W_INSERT_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10,
     T.INTEGRATION_ID)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_INV_QTY,
     S.SUPP_INV_COST,
     S.SUM_SUPP_INV_QTY,
     S.SUM_SUPP_INV_COST,
     S.W_INSERT_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10,
     S.INTEGRATION_ID);

--3.update BBG_RA_SUPP_INV_SC_MN_CUR_A history sum data
UPDATE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A A
   SET (A.SUM_SUPP_INV_QTY, A.SUM_SUPP_INV_COST, A.W_UPDATE_DT) =
       (SELECT B.SUM_SUPP_INV_QTY, B.SUM_SUPP_INV_COST, SYSDATE
          FROM RADM.TEMP_B B
         WHERE A.PROD_DH_WID = B.PROD_DH_WID
           --AND A.ORG_WID = B.ORG_WID
           AND A.MN_WID = B.MN_WID
           AND A.SUPPLIER_WID = B.SUPPLIER_WID)
 WHERE A.SUM_SUPP_INV_QTY IS NULL
    OR A.SUM_SUPP_INV_COST IS NULL;
COMMIT;

 
--4.RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A-----------------------------------------------------------------
--RADM.TEMP_A
CREATE TABLE RADM.TEMP_A  AS  
SELECT /*+PARALLEL(A,20)*/ A.PROD_DH_WID,
        A.SUPPLIER_WID,
        SUBSTR(A.DT_WID, 2, 6)  MN_WID,
        MAX(A.DT_WID) DT_WID
   FROM RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A A
  GROUP BY A.PROD_DH_WID,
           A.SUPPLIER_WID,
           SUBSTR(A.DT_WID, 2, 6)
					 
DROP TABLE RADM.TEMP_A;					 
					 
--RADM.TEMP_B
CREATE TABLE RADM.TEMP_B  AS  
SELECT /*+PARALLEL(B,20)*/
 B.PROD_DH_WID,
 B.SUPPLIER_WID,
 SUBSTR(B.DT_WID, 2, 6) MN_WID,
 SUM(B.SUPP_INV_QTY) SUM_SUPP_INV_QTY,
 SUM(B.SUPP_INV_COST) SUM_SUPP_INV_COST
  FROM RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A B
 GROUP BY B.PROD_DH_WID, B.SUPPLIER_WID, SUBSTR(B.DT_WID, 2, 6)
 
DROP TABLE RADM.TEMP_B;	
 
--CREATE UNIQUE INDEX PK_TEMP_B
CREATE UNIQUE INDEX PK_TEMP_B ON RADM.TEMP_B (PROD_DH_WID, MN_WID, SUPPLIER_WID)
 
--CREATE TABLE
CREATE TABLE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A_T NOLOGGING
AS
SELECT * FROM RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A;

DROP TABLE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A_T;

ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A ADD ( SUM_SUPP_INV_QTY NUMBER,SUM_SUPP_INV_COST NUMBER);
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A ADD ( W_INSERT_DT DATE,W_UPDATE_DT DATE);

--4.MERGE TABLE
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(A,20)*/
        A.PROD_DH_WID,
        SUBSTR(TO_CHAR(A.DT_WID), 2, 6) MN_WID,
        A.SUPPLIER_WID,
        SUM(NVL(A.SUPP_INV_QTY, 0)) SUPP_INV_QTY,
        SUM(NVL(A.SUPP_INV_COST, 0)) SUPP_INV_COST,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_QTY, 0) SUM_SUPP_INV_QTY
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_QTY,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_COST, 0) SUM_SUPP_INV_COST
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_COST,
        MAX(SUBSTR(A.INTEGRATION_ID, 1, INSTR(A.INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(A.DT_WID), 2, 6) ||'~'||
            SUBSTR(A.INTEGRATION_ID,
                   INSTR(A.INTEGRATION_ID, '~', 1, 2),
                   LENGTH(A.INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(A.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(A.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(A.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(A.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(A.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(A.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(A.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(A.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(A.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(A.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(A.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(A.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(A.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(A.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(A.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SUPP_INV_SC_DY_CUR_A A
        WHERE EXISTS (SELECT /*+PARALLEL(TA,20)*/
                A.PROD_DH_WID, A.DT_WID
                 FROM RADM.TEMP_A TA
                WHERE A.PROD_DH_WID = TA.PROD_DH_WID
                  AND A.DT_WID = TA.DT_WID
                  AND A.SUPPLIER_WID = TA.SUPPLIER_WID)
          AND EXISTS (SELECT 1
                 FROM (SELECT MAX(DT_WID) DT_WID FROM RADM.TEMP_A) MA
                WHERE MA.DT_WID = A.DT_WID)
        GROUP BY A.PROD_DH_WID,
                 SUBSTR(TO_CHAR(A.DT_WID), 2, 6),
                 A.SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_INV_QTY       = S.SUPP_INV_QTY,
         T.SUPP_INV_COST      = S.SUPP_INV_COST,
         T.SUM_SUPP_INV_QTY   = S.SUM_SUPP_INV_QTY,
         T.SUM_SUPP_INV_COST  = S.SUM_SUPP_INV_COST,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.INTEGRATION_ID     = S.INTEGRATION_ID
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_INV_QTY,
     T.SUPP_INV_COST,
     T.SUM_SUPP_INV_QTY,
     T.SUM_SUPP_INV_COST,
     T.W_INSERT_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10,
     T.INTEGRATION_ID)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_INV_QTY,
     S.SUPP_INV_COST,
     S.SUM_SUPP_INV_QTY,
     S.SUM_SUPP_INV_COST,
     S.W_INSERT_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10,
     S.INTEGRATION_ID);

--5.RADM.BBG_RA_SUPP_INV_SC_LC_MN_A--------------------------------------------------------------------
--RADM.TEMP_A
CREATE TABLE RADM.TEMP_A  AS  
SELECT /*+PARALLEL(A,20)*/ A.PROD_DH_WID,
        A.SUPPLIER_WID,
        A.ORG_WID,
        SUBSTR(A.DT_WID, 2, 6)  MN_WID,
        MAX(A.DT_WID) DT_WID
   FROM RADM.BBG_RA_SUPP_INV_SC_LC_DY_A A
  GROUP BY A.PROD_DH_WID,
           A.SUPPLIER_WID,
           A.ORG_WID,
           SUBSTR(A.DT_WID, 2, 6)
					 
DROP TABLE RADM.TEMP_A;					 
					 
--RADM.TEMP_B
CREATE TABLE RADM.TEMP_B  AS  
SELECT /*+PARALLEL(B,20)*/
 B.PROD_DH_WID,
 B.SUPPLIER_WID,
 B.ORG_WID,
 SUBSTR(B.DT_WID, 2, 6) MN_WID,
 SUM(B.SUPP_INV_QTY) SUM_SUPP_INV_QTY,
 SUM(B.SUPP_INV_COST) SUM_SUPP_INV_COST
  FROM RADM.BBG_RA_SUPP_INV_SC_LC_DY_A B
 GROUP BY B.PROD_DH_WID, B.SUPPLIER_WID, SUBSTR(B.DT_WID, 2, 6),B.ORG_WID

DROP TABLE RADM.TEMP_B;

--CREATE UNIQUE INDEX PK_TEMP_B
CREATE UNIQUE INDEX PK_TEMP_B ON RADM.TEMP_B (PROD_DH_WID, ORG_WID,MN_WID, SUPPLIER_WID)
 
--CREATE TABLE
CREATE TABLE RADM.BBG_RA_SUPP_INV_SC_LC_MN_A_T NOLOGGING
AS
SELECT * FROM RADM.BBG_RA_SUPP_INV_SC_LC_MN_A;

DROP TABLE RADM.BBG_RA_SUPP_INV_SC_LC_MN_A_T;

ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_LC_MN_A ADD ( SUM_SUPP_INV_QTY NUMBER,SUM_SUPP_INV_COST NUMBER);
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_LC_MN_A ADD ( W_INSERT_DT DATE,W_UPDATE_DT DATE);

--5.MERGE TABLE
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SUPP_INV_SC_LC_MN_A T
USING (SELECT /*+ PARALLEL(A,20)*/
        A.PROD_DH_WID,
        A.ORG_WID,
        MAX(A.ORG_DH_WID) ORG_DH_WID,
        MAX(A.ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(A.DT_WID), 2, 6) MN_WID,
        A.SUPPLIER_WID,
        SUM(NVL(A.SUPP_INV_QTY, 0)) SUPP_INV_QTY,
        SUM(NVL(A.SUPP_INV_COST, 0)) SUPP_INV_COST,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_QTY, 0) SUM_SUPP_INV_QTY
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_QTY,
        (SELECT /*+PARALLEL(B,20)*/
          NVL(B.SUM_SUPP_INV_COST, 0) SUM_SUPP_INV_COST
           FROM RADM.TEMP_B B
          WHERE B.PROD_DH_WID = A.PROD_DH_WID
            AND B.ORG_WID = A.ORG_WID
            AND B.MN_WID = SUBSTR(TO_CHAR(A.DT_WID), 2, 6)
            AND B.SUPPLIER_WID = A.SUPPLIER_WID) SUM_SUPP_INV_COST,
        MAX(SUBSTR(A.INTEGRATION_ID, 1, INSTR(A.INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(A.DT_WID), 2, 6) ||
            SUBSTR(A.INTEGRATION_ID,
                   INSTR(A.INTEGRATION_ID, '~', 1, 3),
                   LENGTH(A.INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(A.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(A.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(A.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(A.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(A.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(A.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(A.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(A.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(A.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(A.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(A.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(A.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(A.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(A.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(A.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SUPP_INV_SC_LC_DY_A A
        WHERE EXISTS (SELECT /*+PARALLEL(TA,20)*/
                A.PROD_DH_WID, A.ORG_WID, A.DT_WID
                 FROM RADM.TEMP_A TA
                WHERE A.PROD_DH_WID = TA.PROD_DH_WID
                  AND A.ORG_WID = TA.ORG_WID
                  AND A.DT_WID = TA.DT_WID
                  AND A.SUPPLIER_WID = TA.SUPPLIER_WID)
          AND EXISTS (SELECT 1
                 FROM (SELECT MAX(DT_WID) DT_WID FROM RADM.TEMP_A) MA
                WHERE MA.DT_WID = A.DT_WID)
        GROUP BY A.PROD_DH_WID,
                 A.ORG_WID,
                 SUBSTR(TO_CHAR(A.DT_WID), 2, 6),
                 A.SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.ORG_DH_WID         = S.ORG_DH_WID,
         T.ORG_SCD1_WID       = S.ORG_SCD1_WID,
         T.SUPP_INV_QTY       = S.SUPP_INV_QTY,
         T.SUPP_INV_COST      = S.SUPP_INV_COST,
         T.SUM_SUPP_INV_QTY   = S.SUM_SUPP_INV_QTY,
         T.SUM_SUPP_INV_COST  = S.SUM_SUPP_INV_COST,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.INTEGRATION_ID     = S.INTEGRATION_ID
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_INV_QTY,
     T.SUPP_INV_COST,
     T.SUM_SUPP_INV_QTY,
     T.SUM_SUPP_INV_COST,
     T.W_INSERT_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10,
     T.INTEGRATION_ID)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_INV_QTY,
     S.SUPP_INV_COST,
     S.SUM_SUPP_INV_QTY,
     S.SUM_SUPP_INV_COST,
     S.W_INSERT_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10,
     S.INTEGRATION_ID);

--更新ODI月汇总步骤
DROP MATERIALIZED VIEW RADM.BBG_RA_SUPP_INV_CL_LC_MN_A;
DROP MATERIALIZED VIEW RADM.BBG_RA_SUPP_INV_DP_LC_MN_A;
DROP MATERIALIZED VIEW RADM.BBG_RA_SUPP_INV_SC_MN_A;
DROP MATERIALIZED VIEW RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A;
DROP MATERIALIZED VIEW RADM.BBG_RA_SUPP_INV_SC_LC_MN_A;

ALTER TABLE RADM.BBG_RA_SUPP_INV_CL_LC_MN_A_T RENAME TO BBG_RA_SUPP_INV_CL_LC_MN_A;
ALTER TABLE RADM.BBG_RA_SUPP_INV_DP_LC_MN_A_T RENAME TO BBG_RA_SUPP_INV_DP_LC_MN_A;
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_A_T RENAME TO BBG_RA_SUPP_INV_SC_MN_A;
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_MN_CUR_A_T RENAME TO BBG_RA_SUPP_INV_SC_MN_CUR_A;
ALTER TABLE RADM.BBG_RA_SUPP_INV_SC_LC_MN_A_T RENAME TO BBG_RA_SUPP_INV_SC_LC_MN_A;

--更新中文说明
CN_Retail_As-Was_BBG_Supplier_Inventory_Position_SUM_EOH_Cost
CN_Retail_As-Was_BBG_Supplier_Inventory_Position_SUM_EOH_Qty

SELECT * FROM RADM.W_LOCALIZED_STRING_G T WHERE T.MSG_NUM LIKE '%SUM_SUPP_INV%' FOR UPDATE ;
