--**********************************************************************************
--1.W_RTL_SLS_SC_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_SC_LC_MN_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_SC_LC_DY_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_SC_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_SCD1_WID,
     T.ORG_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_SCD1_WID,
     S.ORG_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;

--**********************************************************************************
--2.W_RTL_SLS_SC_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_SC_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_SC_LC_DY_CUR_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        SUM(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        SUM(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        SUM(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        SUM(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        SUM(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        SUM(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        SUM(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        SUM(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        SUM(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_SC_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_SCD1_WID,
     T.ORG_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_SCD1_WID,
     S.ORG_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;

--**********************************************************************************
--3.BBG_RA_SLS_SC_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_SC_LC_MN_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_SC_LC_DY_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUPPLIER_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_SC_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_SCD1_WID,
     T.ORG_DH_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.LOC_EXCHANGE_RATE,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_SCD1_WID,
     S.ORG_DH_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.LOC_EXCHANGE_RATE,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--4.W_RTL_SLS_SC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_SC_MN_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_SC_DY_A,12)*/
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_AMT, 0)) SLS_AMT,
        SUM(NVL(SLS_AMT_GLOBAL1, 0)) SLS_AMT_GLOBAL1,
        SUM(NVL(SLS_AMT_GLOBAL2, 0)) SLS_AMT_GLOBAL2,
        SUM(NVL(SLS_AMT_GLOBAL3, 0)) SLS_AMT_GLOBAL3,
        SUM(NVL(SLS_PROFIT_AMT, 0)) SLS_PROFIT_AMT,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL1, 0)) SLS_PROFIT_AMT_GLOBAL1,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL2, 0)) SLS_PROFIT_AMT_GLOBAL2,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL3, 0)) SLS_PROFIT_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_MKDN_AMT, 0)) SLS_MANUAL_MKDN_AMT,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL1, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL1,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL2, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL2,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL3, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_MKUP_AMT, 0)) SLS_MANUAL_MKUP_AMT,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL1, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL1,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL2, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL2,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL3, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL3,
        SUM(NVL(SLS_TAX_AMT, 0)) SLS_TAX_AMT,
        SUM(NVL(SLS_TAX_AMT_GLOBAL1, 0)) SLS_TAX_AMT_GLOBAL1,
        SUM(NVL(SLS_TAX_AMT_GLOBAL2, 0)) SLS_TAX_AMT_GLOBAL2,
        SUM(NVL(SLS_TAX_AMT_GLOBAL3, 0)) SLS_TAX_AMT_GLOBAL3,
        SUM(NVL(SLS_EMP_DISC_AMT, 0)) SLS_EMP_DISC_AMT,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL1, 0)) SLS_EMP_DISC_AMT_GLOBAL1,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL2, 0)) SLS_EMP_DISC_AMT_GLOBAL2,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL3, 0)) SLS_EMP_DISC_AMT_GLOBAL3,
        SUM(NVL(RET_AMT, 0)) RET_AMT,
        SUM(NVL(RET_AMT_GLOBAL1, 0)) RET_AMT_GLOBAL1,
        SUM(NVL(RET_AMT_GLOBAL2, 0)) RET_AMT_GLOBAL2,
        SUM(NVL(RET_AMT_GLOBAL3, 0)) RET_AMT_GLOBAL3,
        SUM(NVL(RET_PROFIT_AMT, 0)) RET_PROFIT_AMT,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL1, 0)) RET_PROFIT_AMT_GLOBAL1,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL2, 0)) RET_PROFIT_AMT_GLOBAL2,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL3, 0)) RET_PROFIT_AMT_GLOBAL3,
        SUM(NVL(RET_MANUAL_MKDN_AMT, 0)) RET_MANUAL_MKDN_AMT,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL1, 0)) RET_MANUAL_MKDN_AMT_GLOBAL1,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL2, 0)) RET_MANUAL_MKDN_AMT_GLOBAL2,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL3, 0)) RET_MANUAL_MKDN_AMT_GLOBAL3,
        SUM(NVL(RET_MANUAL_MKUP_AMT, 0)) RET_MANUAL_MKUP_AMT,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL1, 0)) RET_MANUAL_MKUP_AMT_GLOBAL1,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL2, 0)) RET_MANUAL_MKUP_AMT_GLOBAL2,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL3, 0)) RET_MANUAL_MKUP_AMT_GLOBAL3,
        SUM(NVL(RET_TAX_AMT, 0)) RET_TAX_AMT,
        SUM(NVL(RET_TAX_AMT_GLOBAL1, 0)) RET_TAX_AMT_GLOBAL1,
        SUM(NVL(RET_TAX_AMT_GLOBAL2, 0)) RET_TAX_AMT_GLOBAL2,
        SUM(NVL(RET_TAX_AMT_GLOBAL3, 0)) RET_TAX_AMT_GLOBAL3,
        SUM(NVL(RET_EMP_DISC_AMT, 0)) RET_EMP_DISC_AMT,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL1, 0)) RET_EMP_DISC_AMT_GLOBAL1,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL2, 0)) RET_EMP_DISC_AMT_GLOBAL2,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL3, 0)) RET_EMP_DISC_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 2) + 1)) INTEGRATION_ID,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        SUM(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_SC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                     = S.SLS_QTY,
         T.SLS_AMT_LCL                 = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL          = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL             = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL        = S.SLS_EMP_DISC_AMT_LCL,
         T.RET_QTY                     = S.RET_QTY,
         T.RET_AMT_LCL                 = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL          = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL             = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL        = S.RET_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL     = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL     = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL     = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL     = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_AMT                     = S.SLS_AMT,
         T.SLS_AMT_GLOBAL1             = S.SLS_AMT_GLOBAL1,
         T.SLS_AMT_GLOBAL2             = S.SLS_AMT_GLOBAL2,
         T.SLS_AMT_GLOBAL3             = S.SLS_AMT_GLOBAL3,
         T.SLS_PROFIT_AMT              = S.SLS_PROFIT_AMT,
         T.SLS_PROFIT_AMT_GLOBAL1      = S.SLS_PROFIT_AMT_GLOBAL1,
         T.SLS_PROFIT_AMT_GLOBAL2      = S.SLS_PROFIT_AMT_GLOBAL2,
         T.SLS_PROFIT_AMT_GLOBAL3      = S.SLS_PROFIT_AMT_GLOBAL3,
         T.SLS_MANUAL_MKDN_AMT         = S.SLS_MANUAL_MKDN_AMT,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL1 = S.SLS_MANUAL_MKDN_AMT_GLOBAL1,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL2 = S.SLS_MANUAL_MKDN_AMT_GLOBAL2,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL3 = S.SLS_MANUAL_MKDN_AMT_GLOBAL3,
         T.SLS_MANUAL_MKUP_AMT         = S.SLS_MANUAL_MKUP_AMT,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL1 = S.SLS_MANUAL_MKUP_AMT_GLOBAL1,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL2 = S.SLS_MANUAL_MKUP_AMT_GLOBAL2,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL3 = S.SLS_MANUAL_MKUP_AMT_GLOBAL3,
         T.SLS_TAX_AMT                 = S.SLS_TAX_AMT,
         T.SLS_TAX_AMT_GLOBAL1         = S.SLS_TAX_AMT_GLOBAL1,
         T.SLS_TAX_AMT_GLOBAL2         = S.SLS_TAX_AMT_GLOBAL2,
         T.SLS_TAX_AMT_GLOBAL3         = S.SLS_TAX_AMT_GLOBAL3,
         T.SLS_EMP_DISC_AMT            = S.SLS_EMP_DISC_AMT,
         T.SLS_EMP_DISC_AMT_GLOBAL1    = S.SLS_EMP_DISC_AMT_GLOBAL1,
         T.SLS_EMP_DISC_AMT_GLOBAL2    = S.SLS_EMP_DISC_AMT_GLOBAL2,
         T.SLS_EMP_DISC_AMT_GLOBAL3    = S.SLS_EMP_DISC_AMT_GLOBAL3,
         T.RET_AMT                     = S.RET_AMT,
         T.RET_AMT_GLOBAL1             = S.RET_AMT_GLOBAL1,
         T.RET_AMT_GLOBAL2             = S.RET_AMT_GLOBAL2,
         T.RET_AMT_GLOBAL3             = S.RET_AMT_GLOBAL3,
         T.RET_PROFIT_AMT              = S.RET_PROFIT_AMT,
         T.RET_PROFIT_AMT_GLOBAL1      = S.RET_PROFIT_AMT_GLOBAL1,
         T.RET_PROFIT_AMT_GLOBAL2      = S.RET_PROFIT_AMT_GLOBAL2,
         T.RET_PROFIT_AMT_GLOBAL3      = S.RET_PROFIT_AMT_GLOBAL3,
         T.RET_MANUAL_MKDN_AMT         = S.RET_MANUAL_MKDN_AMT,
         T.RET_MANUAL_MKDN_AMT_GLOBAL1 = S.RET_MANUAL_MKDN_AMT_GLOBAL1,
         T.RET_MANUAL_MKDN_AMT_GLOBAL2 = S.RET_MANUAL_MKDN_AMT_GLOBAL2,
         T.RET_MANUAL_MKDN_AMT_GLOBAL3 = S.RET_MANUAL_MKDN_AMT_GLOBAL3,
         T.RET_MANUAL_MKUP_AMT         = S.RET_MANUAL_MKUP_AMT,
         T.RET_MANUAL_MKUP_AMT_GLOBAL1 = S.RET_MANUAL_MKUP_AMT_GLOBAL1,
         T.RET_MANUAL_MKUP_AMT_GLOBAL2 = S.RET_MANUAL_MKUP_AMT_GLOBAL2,
         T.RET_MANUAL_MKUP_AMT_GLOBAL3 = S.RET_MANUAL_MKUP_AMT_GLOBAL3,
         T.RET_TAX_AMT                 = S.RET_TAX_AMT,
         T.RET_TAX_AMT_GLOBAL1         = S.RET_TAX_AMT_GLOBAL1,
         T.RET_TAX_AMT_GLOBAL2         = S.RET_TAX_AMT_GLOBAL2,
         T.RET_TAX_AMT_GLOBAL3         = S.RET_TAX_AMT_GLOBAL3,
         T.RET_EMP_DISC_AMT            = S.RET_EMP_DISC_AMT,
         T.RET_EMP_DISC_AMT_GLOBAL1    = S.RET_EMP_DISC_AMT_GLOBAL1,
         T.RET_EMP_DISC_AMT_GLOBAL2    = S.RET_EMP_DISC_AMT_GLOBAL2,
         T.RET_EMP_DISC_AMT_GLOBAL3    = S.RET_EMP_DISC_AMT_GLOBAL3,
         T.SLS_MANUAL_COUNT            = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT              = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT            = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT              = S.RET_SCAN_COUNT,
         T.BBG_CUSTOMER_COUNT          = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION    = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT                 = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1           = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2           = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3           = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4           = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5           = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6           = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7           = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8           = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9           = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10          = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_AMT,
     T.SLS_AMT_GLOBAL1,
     T.SLS_AMT_GLOBAL2,
     T.SLS_AMT_GLOBAL3,
     T.SLS_PROFIT_AMT,
     T.SLS_PROFIT_AMT_GLOBAL1,
     T.SLS_PROFIT_AMT_GLOBAL2,
     T.SLS_PROFIT_AMT_GLOBAL3,
     T.SLS_MANUAL_MKDN_AMT,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL1,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL2,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL3,
     T.SLS_MANUAL_MKUP_AMT,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL1,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL2,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL3,
     T.SLS_TAX_AMT,
     T.SLS_TAX_AMT_GLOBAL1,
     T.SLS_TAX_AMT_GLOBAL2,
     T.SLS_TAX_AMT_GLOBAL3,
     T.SLS_EMP_DISC_AMT,
     T.SLS_EMP_DISC_AMT_GLOBAL1,
     T.SLS_EMP_DISC_AMT_GLOBAL2,
     T.SLS_EMP_DISC_AMT_GLOBAL3,
     T.RET_AMT,
     T.RET_AMT_GLOBAL1,
     T.RET_AMT_GLOBAL2,
     T.RET_AMT_GLOBAL3,
     T.RET_PROFIT_AMT,
     T.RET_PROFIT_AMT_GLOBAL1,
     T.RET_PROFIT_AMT_GLOBAL2,
     T.RET_PROFIT_AMT_GLOBAL3,
     T.RET_MANUAL_MKDN_AMT,
     T.RET_MANUAL_MKDN_AMT_GLOBAL1,
     T.RET_MANUAL_MKDN_AMT_GLOBAL2,
     T.RET_MANUAL_MKDN_AMT_GLOBAL3,
     T.RET_MANUAL_MKUP_AMT,
     T.RET_MANUAL_MKUP_AMT_GLOBAL1,
     T.RET_MANUAL_MKUP_AMT_GLOBAL2,
     T.RET_MANUAL_MKUP_AMT_GLOBAL3,
     T.RET_TAX_AMT,
     T.RET_TAX_AMT_GLOBAL1,
     T.RET_TAX_AMT_GLOBAL2,
     T.RET_TAX_AMT_GLOBAL3,
     T.RET_EMP_DISC_AMT,
     T.RET_EMP_DISC_AMT_GLOBAL1,
     T.RET_EMP_DISC_AMT_GLOBAL2,
     T.RET_EMP_DISC_AMT_GLOBAL3,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_AMT,
     S.SLS_AMT_GLOBAL1,
     S.SLS_AMT_GLOBAL2,
     S.SLS_AMT_GLOBAL3,
     S.SLS_PROFIT_AMT,
     S.SLS_PROFIT_AMT_GLOBAL1,
     S.SLS_PROFIT_AMT_GLOBAL2,
     S.SLS_PROFIT_AMT_GLOBAL3,
     S.SLS_MANUAL_MKDN_AMT,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL1,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL2,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL3,
     S.SLS_MANUAL_MKUP_AMT,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL1,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL2,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL3,
     S.SLS_TAX_AMT,
     S.SLS_TAX_AMT_GLOBAL1,
     S.SLS_TAX_AMT_GLOBAL2,
     S.SLS_TAX_AMT_GLOBAL3,
     S.SLS_EMP_DISC_AMT,
     S.SLS_EMP_DISC_AMT_GLOBAL1,
     S.SLS_EMP_DISC_AMT_GLOBAL2,
     S.SLS_EMP_DISC_AMT_GLOBAL3,
     S.RET_AMT,
     S.RET_AMT_GLOBAL1,
     S.RET_AMT_GLOBAL2,
     S.RET_AMT_GLOBAL3,
     S.RET_PROFIT_AMT,
     S.RET_PROFIT_AMT_GLOBAL1,
     S.RET_PROFIT_AMT_GLOBAL2,
     S.RET_PROFIT_AMT_GLOBAL3,
     S.RET_MANUAL_MKDN_AMT,
     S.RET_MANUAL_MKDN_AMT_GLOBAL1,
     S.RET_MANUAL_MKDN_AMT_GLOBAL2,
     S.RET_MANUAL_MKDN_AMT_GLOBAL3,
     S.RET_MANUAL_MKUP_AMT,
     S.RET_MANUAL_MKUP_AMT_GLOBAL1,
     S.RET_MANUAL_MKUP_AMT_GLOBAL2,
     S.RET_MANUAL_MKUP_AMT_GLOBAL3,
     S.RET_TAX_AMT,
     S.RET_TAX_AMT_GLOBAL1,
     S.RET_TAX_AMT_GLOBAL2,
     S.RET_TAX_AMT_GLOBAL3,
     S.RET_EMP_DISC_AMT,
     S.RET_EMP_DISC_AMT_GLOBAL1,
     S.RET_EMP_DISC_AMT_GLOBAL2,
     S.RET_EMP_DISC_AMT_GLOBAL3,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--5.W_RTL_SLS_SC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_SC_MN_CUR_A1 T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_SC_DY_CUR_A,12)*/
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_AMT, 0)) SLS_AMT,
        SUM(NVL(SLS_AMT_GLOBAL1, 0)) SLS_AMT_GLOBAL1,
        SUM(NVL(SLS_AMT_GLOBAL2, 0)) SLS_AMT_GLOBAL2,
        SUM(NVL(SLS_AMT_GLOBAL3, 0)) SLS_AMT_GLOBAL3,
        SUM(NVL(SLS_PROFIT_AMT, 0)) SLS_PROFIT_AMT,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL1, 0)) SLS_PROFIT_AMT_GLOBAL1,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL2, 0)) SLS_PROFIT_AMT_GLOBAL2,
        SUM(NVL(SLS_PROFIT_AMT_GLOBAL3, 0)) SLS_PROFIT_AMT_GLOBAL3,
        SUM(NVL(SLS_TAX_AMT, 0)) SLS_TAX_AMT,
        SUM(NVL(SLS_TAX_AMT_GLOBAL1, 0)) SLS_TAX_AMT_GLOBAL1,
        SUM(NVL(SLS_TAX_AMT_GLOBAL2, 0)) SLS_TAX_AMT_GLOBAL2,
        SUM(NVL(SLS_TAX_AMT_GLOBAL3, 0)) SLS_TAX_AMT_GLOBAL3,
        SUM(NVL(SLS_EMP_DISC_AMT, 0)) SLS_EMP_DISC_AMT,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL1, 0)) SLS_EMP_DISC_AMT_GLOBAL1,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL2, 0)) SLS_EMP_DISC_AMT_GLOBAL2,
        SUM(NVL(SLS_EMP_DISC_AMT_GLOBAL3, 0)) SLS_EMP_DISC_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_MKDN_AMT, 0)) SLS_MANUAL_MKDN_AMT,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL1, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL1,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL2, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL2,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_GLOBAL3, 0)) SLS_MANUAL_MKDN_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_MKUP_AMT, 0)) SLS_MANUAL_MKUP_AMT,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL1, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL1,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL2, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL2,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_GLOBAL3, 0)) SLS_MANUAL_MKUP_AMT_GLOBAL3,
        SUM(NVL(RET_AMT, 0)) RET_AMT,
        SUM(NVL(RET_AMT_GLOBAL1, 0)) RET_AMT_GLOBAL1,
        SUM(NVL(RET_AMT_GLOBAL2, 0)) RET_AMT_GLOBAL2,
        SUM(NVL(RET_AMT_GLOBAL3, 0)) RET_AMT_GLOBAL3,
        SUM(NVL(RET_PROFIT_AMT, 0)) RET_PROFIT_AMT,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL1, 0)) RET_PROFIT_AMT_GLOBAL1,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL2, 0)) RET_PROFIT_AMT_GLOBAL2,
        SUM(NVL(RET_PROFIT_AMT_GLOBAL3, 0)) RET_PROFIT_AMT_GLOBAL3,
        SUM(NVL(RET_TAX_AMT, 0)) RET_TAX_AMT,
        SUM(NVL(RET_TAX_AMT_GLOBAL1, 0)) RET_TAX_AMT_GLOBAL1,
        SUM(NVL(RET_TAX_AMT_GLOBAL2, 0)) RET_TAX_AMT_GLOBAL2,
        SUM(NVL(RET_TAX_AMT_GLOBAL3, 0)) RET_TAX_AMT_GLOBAL3,
        SUM(NVL(RET_EMP_DISC_AMT, 0)) RET_EMP_DISC_AMT,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL1, 0)) RET_EMP_DISC_AMT_GLOBAL1,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL2, 0)) RET_EMP_DISC_AMT_GLOBAL2,
        SUM(NVL(RET_EMP_DISC_AMT_GLOBAL3, 0)) RET_EMP_DISC_AMT_GLOBAL3,
        SUM(NVL(RET_MANUAL_MKDN_AMT, 0)) RET_MANUAL_MKDN_AMT,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL1, 0)) RET_MANUAL_MKDN_AMT_GLOBAL1,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL2, 0)) RET_MANUAL_MKDN_AMT_GLOBAL2,
        SUM(NVL(RET_MANUAL_MKDN_AMT_GLOBAL3, 0)) RET_MANUAL_MKDN_AMT_GLOBAL3,
        SUM(NVL(RET_MANUAL_MKUP_AMT, 0)) RET_MANUAL_MKUP_AMT,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL1, 0)) RET_MANUAL_MKUP_AMT_GLOBAL1,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL2, 0)) RET_MANUAL_MKUP_AMT_GLOBAL2,
        SUM(NVL(RET_MANUAL_MKUP_AMT_GLOBAL3, 0)) RET_MANUAL_MKUP_AMT_GLOBAL3,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 2) + 1)) INTEGRATION_ID,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_SC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                     = S.SLS_QTY,
         T.SLS_AMT_LCL                 = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL          = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL             = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL        = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL     = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL     = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_QTY                     = S.RET_QTY,
         T.RET_AMT_LCL                 = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL          = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL             = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL        = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL     = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL     = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_AMT                     = S.SLS_AMT,
         T.SLS_AMT_GLOBAL1             = S.SLS_AMT_GLOBAL1,
         T.SLS_AMT_GLOBAL2             = S.SLS_AMT_GLOBAL2,
         T.SLS_AMT_GLOBAL3             = S.SLS_AMT_GLOBAL3,
         T.SLS_PROFIT_AMT              = S.SLS_PROFIT_AMT,
         T.SLS_PROFIT_AMT_GLOBAL1      = S.SLS_PROFIT_AMT_GLOBAL1,
         T.SLS_PROFIT_AMT_GLOBAL2      = S.SLS_PROFIT_AMT_GLOBAL2,
         T.SLS_PROFIT_AMT_GLOBAL3      = S.SLS_PROFIT_AMT_GLOBAL3,
         T.SLS_TAX_AMT                 = S.SLS_TAX_AMT,
         T.SLS_TAX_AMT_GLOBAL1         = S.SLS_TAX_AMT_GLOBAL1,
         T.SLS_TAX_AMT_GLOBAL2         = S.SLS_TAX_AMT_GLOBAL2,
         T.SLS_TAX_AMT_GLOBAL3         = S.SLS_TAX_AMT_GLOBAL3,
         T.SLS_EMP_DISC_AMT            = S.SLS_EMP_DISC_AMT,
         T.SLS_EMP_DISC_AMT_GLOBAL1    = S.SLS_EMP_DISC_AMT_GLOBAL1,
         T.SLS_EMP_DISC_AMT_GLOBAL2    = S.SLS_EMP_DISC_AMT_GLOBAL2,
         T.SLS_EMP_DISC_AMT_GLOBAL3    = S.SLS_EMP_DISC_AMT_GLOBAL3,
         T.SLS_MANUAL_MKDN_AMT         = S.SLS_MANUAL_MKDN_AMT,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL1 = S.SLS_MANUAL_MKDN_AMT_GLOBAL1,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL2 = S.SLS_MANUAL_MKDN_AMT_GLOBAL2,
         T.SLS_MANUAL_MKDN_AMT_GLOBAL3 = S.SLS_MANUAL_MKDN_AMT_GLOBAL3,
         T.SLS_MANUAL_MKUP_AMT         = S.SLS_MANUAL_MKUP_AMT,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL1 = S.SLS_MANUAL_MKUP_AMT_GLOBAL1,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL2 = S.SLS_MANUAL_MKUP_AMT_GLOBAL2,
         T.SLS_MANUAL_MKUP_AMT_GLOBAL3 = S.SLS_MANUAL_MKUP_AMT_GLOBAL3,
         T.RET_AMT                     = S.RET_AMT,
         T.RET_AMT_GLOBAL1             = S.RET_AMT_GLOBAL1,
         T.RET_AMT_GLOBAL2             = S.RET_AMT_GLOBAL2,
         T.RET_AMT_GLOBAL3             = S.RET_AMT_GLOBAL3,
         T.RET_PROFIT_AMT              = S.RET_PROFIT_AMT,
         T.RET_PROFIT_AMT_GLOBAL1      = S.RET_PROFIT_AMT_GLOBAL1,
         T.RET_PROFIT_AMT_GLOBAL2      = S.RET_PROFIT_AMT_GLOBAL2,
         T.RET_PROFIT_AMT_GLOBAL3      = S.RET_PROFIT_AMT_GLOBAL3,
         T.RET_TAX_AMT                 = S.RET_TAX_AMT,
         T.RET_TAX_AMT_GLOBAL1         = S.RET_TAX_AMT_GLOBAL1,
         T.RET_TAX_AMT_GLOBAL2         = S.RET_TAX_AMT_GLOBAL2,
         T.RET_TAX_AMT_GLOBAL3         = S.RET_TAX_AMT_GLOBAL3,
         T.RET_EMP_DISC_AMT            = S.RET_EMP_DISC_AMT,
         T.RET_EMP_DISC_AMT_GLOBAL1    = S.RET_EMP_DISC_AMT_GLOBAL1,
         T.RET_EMP_DISC_AMT_GLOBAL2    = S.RET_EMP_DISC_AMT_GLOBAL2,
         T.RET_EMP_DISC_AMT_GLOBAL3    = S.RET_EMP_DISC_AMT_GLOBAL3,
         T.RET_MANUAL_MKDN_AMT         = S.RET_MANUAL_MKDN_AMT,
         T.RET_MANUAL_MKDN_AMT_GLOBAL1 = S.RET_MANUAL_MKDN_AMT_GLOBAL1,
         T.RET_MANUAL_MKDN_AMT_GLOBAL2 = S.RET_MANUAL_MKDN_AMT_GLOBAL2,
         T.RET_MANUAL_MKDN_AMT_GLOBAL3 = S.RET_MANUAL_MKDN_AMT_GLOBAL3,
         T.RET_MANUAL_MKUP_AMT         = S.RET_MANUAL_MKUP_AMT,
         T.RET_MANUAL_MKUP_AMT_GLOBAL1 = S.RET_MANUAL_MKUP_AMT_GLOBAL1,
         T.RET_MANUAL_MKUP_AMT_GLOBAL2 = S.RET_MANUAL_MKUP_AMT_GLOBAL2,
         T.RET_MANUAL_MKUP_AMT_GLOBAL3 = S.RET_MANUAL_MKUP_AMT_GLOBAL3,
         T.SLS_MANUAL_COUNT            = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT              = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT            = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT              = S.RET_SCAN_COUNT,
         T.BBG_CUSTOMER_COUNT          = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION    = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT                 = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1           = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2           = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3           = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4           = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5           = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6           = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7           = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8           = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9           = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10          = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_AMT,
     T.SLS_AMT_GLOBAL1,
     T.SLS_AMT_GLOBAL2,
     T.SLS_AMT_GLOBAL3,
     T.SLS_PROFIT_AMT,
     T.SLS_PROFIT_AMT_GLOBAL1,
     T.SLS_PROFIT_AMT_GLOBAL2,
     T.SLS_PROFIT_AMT_GLOBAL3,
     T.SLS_TAX_AMT,
     T.SLS_TAX_AMT_GLOBAL1,
     T.SLS_TAX_AMT_GLOBAL2,
     T.SLS_TAX_AMT_GLOBAL3,
     T.SLS_EMP_DISC_AMT,
     T.SLS_EMP_DISC_AMT_GLOBAL1,
     T.SLS_EMP_DISC_AMT_GLOBAL2,
     T.SLS_EMP_DISC_AMT_GLOBAL3,
     T.SLS_MANUAL_MKDN_AMT,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL1,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL2,
     T.SLS_MANUAL_MKDN_AMT_GLOBAL3,
     T.SLS_MANUAL_MKUP_AMT,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL1,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL2,
     T.SLS_MANUAL_MKUP_AMT_GLOBAL3,
     T.RET_AMT,
     T.RET_AMT_GLOBAL1,
     T.RET_AMT_GLOBAL2,
     T.RET_AMT_GLOBAL3,
     T.RET_PROFIT_AMT,
     T.RET_PROFIT_AMT_GLOBAL1,
     T.RET_PROFIT_AMT_GLOBAL2,
     T.RET_PROFIT_AMT_GLOBAL3,
     T.RET_TAX_AMT,
     T.RET_TAX_AMT_GLOBAL1,
     T.RET_TAX_AMT_GLOBAL2,
     T.RET_TAX_AMT_GLOBAL3,
     T.RET_EMP_DISC_AMT,
     T.RET_EMP_DISC_AMT_GLOBAL1,
     T.RET_EMP_DISC_AMT_GLOBAL2,
     T.RET_EMP_DISC_AMT_GLOBAL3,
     T.RET_MANUAL_MKDN_AMT,
     T.RET_MANUAL_MKDN_AMT_GLOBAL1,
     T.RET_MANUAL_MKDN_AMT_GLOBAL2,
     T.RET_MANUAL_MKDN_AMT_GLOBAL3,
     T.RET_MANUAL_MKUP_AMT,
     T.RET_MANUAL_MKUP_AMT_GLOBAL1,
     T.RET_MANUAL_MKUP_AMT_GLOBAL2,
     T.RET_MANUAL_MKUP_AMT_GLOBAL3,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_AMT,
     S.SLS_AMT_GLOBAL1,
     S.SLS_AMT_GLOBAL2,
     S.SLS_AMT_GLOBAL3,
     S.SLS_PROFIT_AMT,
     S.SLS_PROFIT_AMT_GLOBAL1,
     S.SLS_PROFIT_AMT_GLOBAL2,
     S.SLS_PROFIT_AMT_GLOBAL3,
     S.SLS_TAX_AMT,
     S.SLS_TAX_AMT_GLOBAL1,
     S.SLS_TAX_AMT_GLOBAL2,
     S.SLS_TAX_AMT_GLOBAL3,
     S.SLS_EMP_DISC_AMT,
     S.SLS_EMP_DISC_AMT_GLOBAL1,
     S.SLS_EMP_DISC_AMT_GLOBAL2,
     S.SLS_EMP_DISC_AMT_GLOBAL3,
     S.SLS_MANUAL_MKDN_AMT,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL1,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL2,
     S.SLS_MANUAL_MKDN_AMT_GLOBAL3,
     S.SLS_MANUAL_MKUP_AMT,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL1,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL2,
     S.SLS_MANUAL_MKUP_AMT_GLOBAL3,
     S.RET_AMT,
     S.RET_AMT_GLOBAL1,
     S.RET_AMT_GLOBAL2,
     S.RET_AMT_GLOBAL3,
     S.RET_PROFIT_AMT,
     S.RET_PROFIT_AMT_GLOBAL1,
     S.RET_PROFIT_AMT_GLOBAL2,
     S.RET_PROFIT_AMT_GLOBAL3,
     S.RET_TAX_AMT,
     S.RET_TAX_AMT_GLOBAL1,
     S.RET_TAX_AMT_GLOBAL2,
     S.RET_TAX_AMT_GLOBAL3,
     S.RET_EMP_DISC_AMT,
     S.RET_EMP_DISC_AMT_GLOBAL1,
     S.RET_EMP_DISC_AMT_GLOBAL2,
     S.RET_EMP_DISC_AMT_GLOBAL3,
     S.RET_MANUAL_MKDN_AMT,
     S.RET_MANUAL_MKDN_AMT_GLOBAL1,
     S.RET_MANUAL_MKDN_AMT_GLOBAL2,
     S.RET_MANUAL_MKDN_AMT_GLOBAL3,
     S.RET_MANUAL_MKUP_AMT,
     S.RET_MANUAL_MKUP_AMT_GLOBAL1,
     S.RET_MANUAL_MKUP_AMT_GLOBAL2,
     S.RET_MANUAL_MKUP_AMT_GLOBAL3,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--6.W_RTL_SLS_CL_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_CL_LC_MN_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_CL_LC_DY_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_CL_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID,
                 PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.ORG_WID = S.ORG_WID AND T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.GLOBAL1_EXCHANGE_RATE    = S.GLOBAL1_EXCHANGE_RATE,
         T.GLOBAL2_EXCHANGE_RATE    = S.GLOBAL2_EXCHANGE_RATE,
         T.GLOBAL3_EXCHANGE_RATE    = S.GLOBAL3_EXCHANGE_RATE,
         T.LOC_EXCHANGE_RATE        = S.LOC_EXCHANGE_RATE,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--7.W_RTL_SLS_CL_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_CL_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_CL_LC_DY_CUR_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_CL_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID,
                 PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.ORG_WID = S.ORG_WID AND T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.GLOBAL1_EXCHANGE_RATE    = S.GLOBAL1_EXCHANGE_RATE,
         T.GLOBAL2_EXCHANGE_RATE    = S.GLOBAL2_EXCHANGE_RATE,
         T.GLOBAL3_EXCHANGE_RATE    = S.GLOBAL3_EXCHANGE_RATE,
         T.LOC_EXCHANGE_RATE        = S.LOC_EXCHANGE_RATE,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--8.W_RTL_SLS_DP_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_DP_LC_MN_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_DP_LC_DY_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_DP_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID,
                 PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.ORG_WID = S.ORG_WID AND T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.GLOBAL1_EXCHANGE_RATE    = S.GLOBAL1_EXCHANGE_RATE,
         T.GLOBAL2_EXCHANGE_RATE    = S.GLOBAL2_EXCHANGE_RATE,
         T.GLOBAL3_EXCHANGE_RATE    = S.GLOBAL3_EXCHANGE_RATE,
         T.LOC_EXCHANGE_RATE        = S.LOC_EXCHANGE_RATE,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--9.W_RTL_SLS_DP_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_DP_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_DP_LC_DY_CUR_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_MANUAL_COUNT, 0)) SLS_MANUAL_COUNT,
        SUM(NVL(SLS_SCAN_COUNT, 0)) SLS_SCAN_COUNT,
        SUM(NVL(RET_MANUAL_COUNT, 0)) RET_MANUAL_COUNT,
        SUM(NVL(RET_SCAN_COUNT, 0)) RET_SCAN_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_DP_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID,
                 PROD_DH_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.ORG_WID = S.ORG_WID AND T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.SLS_MANUAL_COUNT         = S.SLS_MANUAL_COUNT,
         T.SLS_SCAN_COUNT           = S.SLS_SCAN_COUNT,
         T.RET_MANUAL_COUNT         = S.RET_MANUAL_COUNT,
         T.RET_SCAN_COUNT           = S.RET_SCAN_COUNT,
         T.GLOBAL1_EXCHANGE_RATE    = S.GLOBAL1_EXCHANGE_RATE,
         T.GLOBAL2_EXCHANGE_RATE    = S.GLOBAL2_EXCHANGE_RATE,
         T.GLOBAL3_EXCHANGE_RATE    = S.GLOBAL3_EXCHANGE_RATE,
         T.LOC_EXCHANGE_RATE        = S.LOC_EXCHANGE_RATE,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.PROD_DH_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.SLS_MANUAL_COUNT,
     T.SLS_SCAN_COUNT,
     T.RET_MANUAL_COUNT,
     T.RET_SCAN_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.PROD_DH_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.SLS_MANUAL_COUNT,
     S.SLS_SCAN_COUNT,
     S.RET_MANUAL_COUNT,
     S.RET_SCAN_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--10.W_RTL_SLS_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.W_RTL_SLS_LC_MN_A T
USING (SELECT /*+ PARALLEL(W_RTL_SLS_LC_DY_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        RTL_TYPE_WID,
        SUM(NVL(SLS_QTY, 0)) SLS_QTY,
        SUM(NVL(SLS_AMT_LCL, 0)) SLS_AMT_LCL,
        SUM(NVL(SLS_PROFIT_AMT_LCL, 0)) SLS_PROFIT_AMT_LCL,
        SUM(NVL(SLS_TAX_AMT_LCL, 0)) SLS_TAX_AMT_LCL,
        SUM(NVL(SLS_EMP_DISC_AMT_LCL, 0)) SLS_EMP_DISC_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKDN_AMT_LCL, 0)) SLS_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(SLS_MANUAL_MKUP_AMT_LCL, 0)) SLS_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(SLS_TRX_COUNT, 0)) SLS_TRX_COUNT,
        SUM(NVL(RET_QTY, 0)) RET_QTY,
        SUM(NVL(RET_AMT_LCL, 0)) RET_AMT_LCL,
        SUM(NVL(RET_PROFIT_AMT_LCL, 0)) RET_PROFIT_AMT_LCL,
        SUM(NVL(RET_TAX_AMT_LCL, 0)) RET_TAX_AMT_LCL,
        SUM(NVL(RET_EMP_DISC_AMT_LCL, 0)) RET_EMP_DISC_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKDN_AMT_LCL, 0)) RET_MANUAL_MKDN_AMT_LCL,
        SUM(NVL(RET_MANUAL_MKUP_AMT_LCL, 0)) RET_MANUAL_MKUP_AMT_LCL,
        SUM(NVL(RET_TRX_COUNT, 0)) RET_TRX_COUNT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   INSTR(INTEGRATION_ID, '~', 1, 3) -
                   INSTR(INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        MAX(GLOBAL1_EXCHANGE_RATE) GLOBAL1_EXCHANGE_RATE,
        MAX(GLOBAL2_EXCHANGE_RATE) GLOBAL2_EXCHANGE_RATE,
        MAX(GLOBAL3_EXCHANGE_RATE) GLOBAL3_EXCHANGE_RATE,
        MAX(LOC_EXCHANGE_RATE) LOC_EXCHANGE_RATE,
        BBG_RETAIL_TYPE_WID,
        SUM(NVL(BBG_CUSTOMER_COUNT, 0)) BBG_CUSTOMER_COUNT,
        SUM(NVL(BBG_SERVICE_SATISFACTION, 0)) BBG_SERVICE_SATISFACTION,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        MAX(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.W_RTL_SLS_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 RTL_TYPE_WID,
                 BBG_RETAIL_TYPE_WID) S
ON (T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.RTL_TYPE_WID = S.RTL_TYPE_WID AND T.BBG_RETAIL_TYPE_WID = S.BBG_RETAIL_TYPE_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SLS_QTY                  = S.SLS_QTY,
         T.SLS_AMT_LCL              = S.SLS_AMT_LCL,
         T.SLS_PROFIT_AMT_LCL       = S.SLS_PROFIT_AMT_LCL,
         T.SLS_TAX_AMT_LCL          = S.SLS_TAX_AMT_LCL,
         T.SLS_EMP_DISC_AMT_LCL     = S.SLS_EMP_DISC_AMT_LCL,
         T.SLS_MANUAL_MKDN_AMT_LCL  = S.SLS_MANUAL_MKDN_AMT_LCL,
         T.SLS_MANUAL_MKUP_AMT_LCL  = S.SLS_MANUAL_MKUP_AMT_LCL,
         T.SLS_TRX_COUNT            = S.SLS_TRX_COUNT,
         T.RET_QTY                  = S.RET_QTY,
         T.RET_AMT_LCL              = S.RET_AMT_LCL,
         T.RET_PROFIT_AMT_LCL       = S.RET_PROFIT_AMT_LCL,
         T.RET_TAX_AMT_LCL          = S.RET_TAX_AMT_LCL,
         T.RET_EMP_DISC_AMT_LCL     = S.RET_EMP_DISC_AMT_LCL,
         T.RET_MANUAL_MKDN_AMT_LCL  = S.RET_MANUAL_MKDN_AMT_LCL,
         T.RET_MANUAL_MKUP_AMT_LCL  = S.RET_MANUAL_MKUP_AMT_LCL,
         T.RET_TRX_COUNT            = S.RET_TRX_COUNT,
         T.GLOBAL1_EXCHANGE_RATE    = S.GLOBAL1_EXCHANGE_RATE,
         T.GLOBAL2_EXCHANGE_RATE    = S.GLOBAL2_EXCHANGE_RATE,
         T.GLOBAL3_EXCHANGE_RATE    = S.GLOBAL3_EXCHANGE_RATE,
         T.LOC_EXCHANGE_RATE        = S.LOC_EXCHANGE_RATE,
         T.BBG_CUSTOMER_COUNT       = S.BBG_CUSTOMER_COUNT,
         T.BBG_SERVICE_SATISFACTION = S.BBG_SERVICE_SATISFACTION,
         T.W_UPDATE_DT              = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1        = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2        = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3        = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4        = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5        = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6        = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7        = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8        = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9        = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10       = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.RTL_TYPE_WID,
     T.SLS_QTY,
     T.SLS_AMT_LCL,
     T.SLS_PROFIT_AMT_LCL,
     T.SLS_TAX_AMT_LCL,
     T.SLS_EMP_DISC_AMT_LCL,
     T.SLS_MANUAL_MKDN_AMT_LCL,
     T.SLS_MANUAL_MKUP_AMT_LCL,
     T.SLS_TRX_COUNT,
     T.RET_QTY,
     T.RET_AMT_LCL,
     T.RET_PROFIT_AMT_LCL,
     T.RET_TAX_AMT_LCL,
     T.RET_EMP_DISC_AMT_LCL,
     T.RET_MANUAL_MKDN_AMT_LCL,
     T.RET_MANUAL_MKUP_AMT_LCL,
     T.RET_TRX_COUNT,
     T.INTEGRATION_ID,
     T.GLOBAL1_EXCHANGE_RATE,
     T.GLOBAL2_EXCHANGE_RATE,
     T.GLOBAL3_EXCHANGE_RATE,
     T.LOC_EXCHANGE_RATE,
     T.BBG_RETAIL_TYPE_WID,
     T.BBG_CUSTOMER_COUNT,
     T.BBG_SERVICE_SATISFACTION,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.RTL_TYPE_WID,
     S.SLS_QTY,
     S.SLS_AMT_LCL,
     S.SLS_PROFIT_AMT_LCL,
     S.SLS_TAX_AMT_LCL,
     S.SLS_EMP_DISC_AMT_LCL,
     S.SLS_MANUAL_MKDN_AMT_LCL,
     S.SLS_MANUAL_MKUP_AMT_LCL,
     S.SLS_TRX_COUNT,
     S.RET_QTY,
     S.RET_AMT_LCL,
     S.RET_PROFIT_AMT_LCL,
     S.RET_TAX_AMT_LCL,
     S.RET_EMP_DISC_AMT_LCL,
     S.RET_MANUAL_MKDN_AMT_LCL,
     S.RET_MANUAL_MKUP_AMT_LCL,
     S.RET_TRX_COUNT,
     S.INTEGRATION_ID,
     S.GLOBAL1_EXCHANGE_RATE,
     S.GLOBAL2_EXCHANGE_RATE,
     S.GLOBAL3_EXCHANGE_RATE,
     S.LOC_EXCHANGE_RATE,
     S.BBG_RETAIL_TYPE_WID,
     S.BBG_CUSTOMER_COUNT,
     S.BBG_SERVICE_SATISFACTION,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--11.BBG_RA_SLS_SC_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_SC_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_SC_LC_DY_CUR_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUPPLIER_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 1) + 1,
                   INSTR(INTEGRATION_ID, '~', 1, 2) -
                   INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID) - INSTR(INTEGRATION_ID, '~', 1, 3) + 1)) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_SC_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--12.BBG_RA_SLS_SC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_SC_MN_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_SC_DY_A,12)*/
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SUPPLIER_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_SC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID, SUBSTR(TO_CHAR(DT_WID), 2, 6), SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.SUPPLIER_WID,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.SUPPLIER_WID,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--13.BBG_RA_SLS_SC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_SC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_SC_DY_CUR_A,12)*/
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SUPPLIER_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_SC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID, SUBSTR(TO_CHAR(DT_WID), 2, 6), SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.SUPPLIER_WID,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.SUPPLIER_WID,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--14.BBG_RA_SLS_SC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_SC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_SC_DY_CUR_A,12)*/
        PROD_DH_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SUPPLIER_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_SC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID, SUBSTR(TO_CHAR(DT_WID), 2, 6), SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.MN_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.SUPPLIER_WID,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.MN_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.SUPPLIER_WID,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--15.BBG_RA_SLS_CL_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_CL_LC_MN_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_CL_LC_DY_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SUPPLIER_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_CL_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.SUPPLIER_WID,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.SUPPLIER_WID,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--16.BBG_RA_SLS_CL_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_CL_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_CL_LC_DY_CUR_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUPPLIER_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_CL_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--17.BBG_RA_SLS_DP_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_DP_LC_MN_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_DP_LC_DY_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SUPPLIER_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_DP_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.SUPPLIER_WID,
     T.INTEGRATION_ID,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.SUPPLIER_WID,
     S.INTEGRATION_ID,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--18.BBG_RA_SLS_DP_LC_MN_CUR_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_DP_LC_MN_CUR_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_DP_LC_DY_CUR_A,12)*/
        PROD_DH_WID,
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        SUPPLIER_WID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 2)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 3),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_DP_LC_DY_CUR_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY PROD_DH_WID,
                 ORG_WID,
                 SUBSTR(TO_CHAR(DT_WID), 2, 6),
                 SUPPLIER_WID) S
ON (T.PROD_DH_WID = S.PROD_DH_WID AND T.ORG_WID = S.ORG_WID AND T.MN_WID = S.MN_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.PROD_DH_WID,
     T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.MN_WID,
     T.SUPPLIER_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.INTEGRATION_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.PROD_DH_WID,
     S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.MN_WID,
     S.SUPPLIER_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.INTEGRATION_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--19.BBG_RA_SLS_LC_MN_A
--**********************************************************************************
MERGE /*+APPEND*/
INTO RADM.BBG_RA_SLS_LC_MN_A T
USING (SELECT /*+ PARALLEL(BBG_RA_SLS_LC_DY_A,12)*/
        ORG_WID,
        MAX(ORG_DH_WID) ORG_DH_WID,
        MAX(ORG_SCD1_WID) ORG_SCD1_WID,
        SUPPLIER_WID,
        SUBSTR(TO_CHAR(DT_WID), 2, 6) MN_WID,
        MAX(SUBSTR(INTEGRATION_ID, 1, INSTR(INTEGRATION_ID, '~', 1, 1)) ||
            SUBSTR(TO_CHAR(DT_WID), 2, 6) ||
            SUBSTR(INTEGRATION_ID,
                   INSTR(INTEGRATION_ID, '~', 1, 2),
                   LENGTH(INTEGRATION_ID))) INTEGRATION_ID,
        SUM(NVL(SUPP_SALES_QTY, 0)) SUPP_SALES_QTY,
        SUM(NVL(SUPP_SALES_COST, 0)) SUPP_SALES_COST,
        SUM(NVL(SUPP_SALES_AMT, 0)) SUPP_SALES_AMT,
        SYSDATE W_INSERT_DT,
        SYSDATE W_UPDATE_DT,
        MAX(BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
        MAX(BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
        MAX(BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
        MAX(BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
        MAX(BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
        SUM(BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
        MAX(BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
        MAX(BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
        MAX(BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
        MAX(BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
        MAX(BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
        MAX(BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
        MAX(BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
        MAX(BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
        MAX(BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_LC_DY_A
        WHERE DT_WID >=
              '1' || TO_CHAR(TRUNC(SYSDATE - 1, 'MONTH'), 'YYYYMMDD') ||
              '000'
        GROUP BY ORG_WID, SUPPLIER_WID, SUBSTR(TO_CHAR(DT_WID), 2, 6)) S
ON (T.ORG_WID = S.ORG_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID AND T.MN_WID = S.MN_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10
WHEN NOT MATCHED THEN
  INSERT
    (T.ORG_WID,
     T.ORG_DH_WID,
     T.ORG_SCD1_WID,
     T.SUPPLIER_WID,
     T.MN_WID,
     T.INTEGRATION_ID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (S.ORG_WID,
     S.ORG_DH_WID,
     S.ORG_SCD1_WID,
     S.SUPPLIER_WID,
     S.MN_WID,
     S.INTEGRATION_ID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;
--**********************************************************************************
--20.RA_INV_IT_LC_DY_CHECK
--**********************************************************************************
TRUNCATE TABLE RADM.RA_INV_IT_LC_DY_CHECK;

INSERT INTO RADM.RA_INV_IT_LC_DY_CHECK NOLOGGING
SELECT /*+ PARALLEL(T,12)*/
 PROD.PROD_NUM ITEM, ORG.ORG_NUM LOC, T.INV_SOH_QTY, T.INV_SOH_COST_AMT_LCL
  FROM RADM.W_RTL_INV_IT_LC_DY_FV T, W_PRODUCT_D PROD, W_INT_ORG_D ORG
 WHERE T.ORG_WID = ORG.ROW_WID
   AND T.PROD_WID = PROD.ROW_WID
   AND T.DT_WID = '1' || TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000';

CREATE TABLE RADM.RA_INV_IT_LC_DY_CHECK NOLOGGING AS 
  SELECT  /*+ PARALLEL(T,12)*/  PROD.PROD_NUM          ITEM,
         ORG.ORG_NUM            LOC,
         T.INV_SOH_QTY,
         T.INV_SOH_COST_AMT_LCL
    FROM RADM.W_RTL_INV_IT_LC_DY_FV T, W_PRODUCT_D PROD, W_INT_ORG_D ORG
   WHERE T.ORG_WID = ORG.ROW_WID
     AND T.PROD_WID = PROD.ROW_WID
     AND T.DT_WID = '1' || TO_CHAR(SYSDATE - 1, 'YYYYMMDD') || '000';

--**********************************************************************************
--21.RMS_RA_INV_CHECK_DIFF
--**********************************************************************************
TRUNCATE TABLE RADM.RMS_RA_INV_CHECK_DIFF;

INSERT INTO RADM.RMS_RA_INV_CHECK_DIFF NOLOGGING
  SELECT /*+parallel(RMS,12) parallel(RA,12)*/
   RMS.ITEM,
   RMS.LOC,
   RMS.LOC_TYPE,
   RMS.STOCK_ON_HAND RMS_SOH,
   RA.INV_SOH_QTY RA_SOH,
   RMS.STOCK_ON_HAND - RA.INV_SOH_QTY DIFF_SOH,
   RMS.COST RMS_COST,
   RA.INV_SOH_COST_AMT_LCL RA_COST,
   RMS.COST - RA.INV_SOH_COST_AMT_LCL DIFF_COST,
   SYSDATE W_INSERT_DT
    FROM (SELECT T.ITEM,
                 T.LOC,
                 T.LOC_TYPE,
                 T.STOCK_ON_HAND,
                 T.STOCK_ON_HAND * T.AV_COST COST
            FROM RMSHIST.ITEM_LOC_SOH_HIST@RA_RMS_DBLINK T
           WHERE T.SOH_BAK_DATE =
                 TO_DATE(TO_CHAR(SYSDATE - 1, 'YYYYMMDD'), 'YYYYMMDD')) RMS,
         RADM.RA_INV_IT_LC_DY_CHECK RA
   WHERE RMS.ITEM = RA.ITEM(+)
     AND RMS.LOC = RA.LOC(+)
     AND (RMS.STOCK_ON_HAND <> NVL(RA.INV_SOH_QTY, 0));

CREATE TABLE RADM.RMS_RA_INV_CHECK_DIFF NOLOGGING  AS 
  SELECT /*+parallel(RMS,12) parallel(RA,12)*/ RMS.ITEM,
         RMS.LOC,
   RMS.LOC_TYPE,
         RMS.STOCK_ON_HAND RMS_SOH,
         RA.INV_SOH_QTY RA_SOH,
         RMS.STOCK_ON_HAND - RA.INV_SOH_QTY DIFF_SOH,
         RMS.COST RMS_COST,
         RA.INV_SOH_COST_AMT_LCL RA_COST,
         RMS.COST - RA.INV_SOH_COST_AMT_LCL DIFF_COST,
   SYSDATE W_INSERT_DT
    FROM (SELECT T.ITEM,
                 T.LOC,
     T.LOC_TYPE,
                 T.STOCK_ON_HAND,
                 T.STOCK_ON_HAND * T.AV_COST COST
            FROM RMSHIST.ITEM_LOC_SOH_HIST@RA_RMS_DBLINK T
           WHERE T.SOH_BAK_DATE =
                 TO_DATE(TO_CHAR(SYSDATE - 1, 'YYYYMMDD'), 'YYYYMMDD')
           ) RMS,
         RADM.RA_INV_IT_LC_DY_CHECK RA
   WHERE RMS.ITEM = RA.ITEM(+)
     AND RMS.LOC = RA.LOC(+)
     AND (RMS.STOCK_ON_HAND <> NVL(RA.INV_SOH_QTY,0));
--**********************************************************************************
--22.W_RTL_SUPPCM_IT_LC_DY_MV
--**********************************************************************************
CREATE TABLE RADM.W_RTL_SUPPCM_IT_LC_DY_MV  NOLOGGING  AS 
  SELECT  /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_DY_FV,12)*/  * FROM W_RTL_SUPPCM_IT_LC_DY_FV;
	
TRUNCATE TABLE RADM.W_RTL_SUPPCM_IT_LC_DY_MV;

INSERT INTO RADM.W_RTL_SUPPCM_IT_LC_DY_MV NOLOGGING
SELECT  /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_DY_FV,12)*/  * FROM W_RTL_SUPPCM_IT_LC_DY_FV;

--**********************************************************************************
--23.W_RTL_SUPPCM_IT_LC_AD_MV
--**********************************************************************************
CREATE TABLE RADM.W_RTL_SUPPCM_IT_LC_AD_MV NOLOGGING  AS 
SELECT  /*+ PARALLEL(W_RTL_INV_IT_LC_DY_FV,12)*/ * 
FROM RADM.W_RTL_SUPPCM_IT_LC_AD_FV;

TRUNCATE TABLE RADM.W_RTL_SUPPCM_IT_LC_AD_MV;

INSERT INTO RADM.W_RTL_SUPPCM_IT_LC_AD_MV NOLOGGING
SELECT /*+ PARALLEL(W_RTL_INV_IT_LC_DY_FV,12)*/
 *
  FROM RADM.W_RTL_SUPPCM_IT_LC_AD_FV;

--**********************************************************************************
--24.W_RTL_SUPPCM_IT_LC_ED_MV
--**********************************************************************************
CREATE TABLE RADM.W_RTL_SUPPCM_IT_LC_ED_MV NOLOGGING  AS 
SELECT /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_ED_FV,12)*/  * 
FROM RADM.W_RTL_SUPPCM_IT_LC_ED_FV;

TRUNCATE TABLE RADM.W_RTL_SUPPCM_IT_LC_ED_MV;

INSERT INTO RADM.W_RTL_SUPPCM_IT_LC_ED_MV NOLOGGING
SELECT /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_ED_FV,12)*/  * 
FROM RADM.W_RTL_SUPPCM_IT_LC_ED_FV;


--**********************************************************************************
--25.W_RTL_SUPPCM_IT_LC_TD_MV
--**********************************************************************************
CREATE TABLE RADM.W_RTL_SUPPCM_IT_LC_TD_MV NOLOGGING  AS 
SELECT /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_TD_FV,12)*/  * 
FROM RADM.W_RTL_SUPPCM_IT_LC_TD_FV;

TRUNCATE TABLE RADM.W_RTL_SUPPCM_IT_LC_TD_MV;

INSERT INTO RADM.W_RTL_SUPPCM_IT_LC_TD_MV NOLOGGING
SELECT /*+ PARALLEL(W_RTL_SUPPCM_IT_LC_TD_FV,12)*/  * 
FROM RADM.W_RTL_SUPPCM_IT_LC_TD_FV;
--**********************************************************************************
--26.JIN_RMS_SUPPCM_TMP
--**********************************************************************************
CREATE TABLE RADM.JIN_RMS_SUPPCM_TMP NOLOGGING AS
SELECT /*+PARALLEL(T,12) PARALLEL(K,12) PARALLEL(N,12)*/
 T.ORDER_NO,
 T.ITEM,
 NVL(T.QTY_ORDERED, 0) + NVL(T.QTY_CANCELLED, 0) ORDERED_QTY,
 (NVL(T.QTY_ORDERED, 0) + NVL(T.QTY_CANCELLED, 0)) * T.UNIT_COST ORDERED_AMT,
 SUM(NVL(K.QTY_RECEIVED, 0)) RECEIVED_QTY,
 SUM(NVL(K.UNIT_COST, 0) * NVL(K.QTY_RECEIVED, 0)) RECEIVED_AMT
  FROM RMS.ORDLOC@RA_RMS_DBLINK   T,
       RMS.SHIPSKU@RA_RMS_DBLINK  K,
       RMS.SHIPMENT@RA_RMS_DBLINK N
 WHERE K.SHIPMENT = N.SHIPMENT
   AND N.ORDER_NO = T.ORDER_NO
   AND K.ITEM = T.ITEM
   AND N.RECEIVE_DATE <
       TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
   AND EXISTS (SELECT 1
          FROM RMS.CMX_ORDHEAD@RA_RMS_DBLINK F
         WHERE T.ORDER_NO = F.ORDER_NO)
 GROUP BY T.ORDER_NO, T.ITEM, T.QTY_ORDERED, T.QTY_CANCELLED, T.UNIT_COST;

TRUNCATE TABLE RADM.JIN_RMS_SUPPCM_TMP;

INSERT INTO RADM.JIN_RMS_SUPPCM_TMP NOLOGGING
SELECT /*+PARALLEL(T,12) PARALLEL(K,12) PARALLEL(N,12)*/
 T.ORDER_NO,
 T.ITEM,
 NVL(T.QTY_ORDERED, 0) + NVL(T.QTY_CANCELLED, 0) ORDERED_QTY,
 (NVL(T.QTY_ORDERED, 0) + NVL(T.QTY_CANCELLED, 0)) * T.UNIT_COST ORDERED_AMT,
 SUM(NVL(K.QTY_RECEIVED, 0)) RECEIVED_QTY,
 SUM(NVL(K.UNIT_COST, 0) * NVL(K.QTY_RECEIVED, 0)) RECEIVED_AMT
  FROM RMS.ORDLOC@RA_RMS_DBLINK   T,
       RMS.SHIPSKU@RA_RMS_DBLINK  K,
       RMS.SHIPMENT@RA_RMS_DBLINK N
 WHERE K.SHIPMENT = N.SHIPMENT
   AND N.ORDER_NO = T.ORDER_NO
   AND K.ITEM = T.ITEM
   AND N.RECEIVE_DATE <
       TO_DATE(TO_CHAR(SYSDATE, 'YYYY-MM-DD'), 'YYYY-MM-DD')
   AND EXISTS (SELECT 1
          FROM RMS.CMX_ORDHEAD@RA_RMS_DBLINK F
         WHERE T.ORDER_NO = F.ORDER_NO)
 GROUP BY T.ORDER_NO, T.ITEM, T.QTY_ORDERED, T.QTY_CANCELLED, T.UNIT_COST;
--**********************************************************************************
--27.JIN_RA_SUPPCM_TMP
--**********************************************************************************
CREATE TABLE RADM.JIN_RA_SUPPCM_TMP NOLOGGING AS
SELECT /*+PARALLEL(CM,12) PARALLEL(P,12)*/
 CM.PURCHASE_ORDER_ID ORDER_NO,
 P.PROD_NUM ITEM,
 NVL(CM.ORDERED_QTY, 0) ORDERED_QTY,
 NVL(CM.RECEIVED_QTY, 0) RECEIVED_QTY,
 NVL(CM.BBG_REFERENCE_FO1, 0) ORDERED_AMT,
 NVL(CM.BBG_REFERENCE_FO2, 0) RECEIVED_AMT
  FROM RADM.W_RTL_SUPPCM_IT_LC_DY_MV CM, W_PRODUCT_D P
 WHERE CM.PROD_WID = P.ROW_WID;

TRUNCATE TABLE RADM.JIN_RA_SUPPCM_TMP;

INSERT INTO RADM.JIN_RA_SUPPCM_TMP NOLOGGING
SELECT /*+PARALLEL(CM,12) PARALLEL(P,12)*/
 CM.PURCHASE_ORDER_ID ORDER_NO,
 P.PROD_NUM ITEM,
 NVL(CM.ORDERED_QTY, 0) ORDERED_QTY,
 NVL(CM.RECEIVED_QTY, 0) RECEIVED_QTY,
 NVL(CM.BBG_REFERENCE_FO1, 0) ORDERED_AMT,
 NVL(CM.BBG_REFERENCE_FO2, 0) RECEIVED_AMT
  FROM RADM.W_RTL_SUPPCM_IT_LC_DY_MV CM, W_PRODUCT_D P
 WHERE CM.PROD_WID = P.ROW_WID;
--**********************************************************************************
--28.JIN_RMS_RA_SUPPCM_DIFF
--**********************************************************************************
CREATE TABLE RADM.JIN_RMS_RA_SUPPCM_DIFF  NOLOGGING  AS 
SELECT /*+PARALLEL(RMS,12) PARALLEL(RA,12)*/ RMS.ORDER_NO,
       RMS.ITEM,
       RMS.ORDERED_QTY RMS_ORD_QTY,
       NVL(RA.ORDERED_QTY, 0) RA_ORD_QTY,
       RMS.ORDERED_QTY-NVL(RA.ORDERED_QTY, 0) ORD_QTY_DIFF,
       RMS.RECEIVED_QTY RMS_REC_QTY,
       NVL(RA.RECEIVED_QTY, 0) RA_REC_QTY,
       RMS.RECEIVED_QTY-NVL(RA.RECEIVED_QTY, 0) REC_QTY_DIFF,
       RMS.ORDERED_AMT RMS_ORD_AMT,
       NVL(RA.ORDERED_AMT, 0) RA_ORD_AMT,
       RMS.ORDERED_AMT-NVL(RA.ORDERED_AMT, 0) ORD_AMT_DIFF,
       RMS.RECEIVED_AMT RMS_REC_AMT,
       NVL(RA.RECEIVED_AMT, 0) RA_REC_AMT,
       RMS.RECEIVED_AMT-NVL(RA.RECEIVED_AMT, 0) REC_AMT_DIFF,
       SYSDATE W_INSERT_DT
  FROM RADM.JIN_RMS_SUPPCM_TMP RMS,
       RADM.JIN_RA_SUPPCM_TMP RA
 WHERE RMS.ORDER_NO = RA.ORDER_NO(+)
   AND RMS.ITEM = RA.ITEM(+)
   AND (NVL(RMS.ORDERED_QTY, 0) <> NVL(RA.ORDERED_QTY, 0) OR
       NVL(RMS.RECEIVED_QTY, 0) <> NVL(RA.RECEIVED_QTY, 0) OR
       (NVL(RMS.ORDERED_AMT, 0) - NVL(RA.ORDERED_AMT, 0)) > 0.01 OR
       (NVL(RMS.RECEIVED_AMT, 0) - NVL(RA.RECEIVED_AMT, 0)) > 0.01);
			 
TRUNCATE TABLE RADM.JIN_RMS_RA_SUPPCM_DIFF;

INSERT INTO RADM.JIN_RMS_RA_SUPPCM_DIFF NOLOGGING
SELECT /*+PARALLEL(RMS,12) PARALLEL(RA,12)*/ RMS.ORDER_NO,
       RMS.ITEM,
       RMS.ORDERED_QTY RMS_ORD_QTY,
       NVL(RA.ORDERED_QTY, 0) RA_ORD_QTY,
       RMS.ORDERED_QTY-NVL(RA.ORDERED_QTY, 0) ORD_QTY_DIFF,
       RMS.RECEIVED_QTY RMS_REC_QTY,
       NVL(RA.RECEIVED_QTY, 0) RA_REC_QTY,
       RMS.RECEIVED_QTY-NVL(RA.RECEIVED_QTY, 0) REC_QTY_DIFF,
       RMS.ORDERED_AMT RMS_ORD_AMT,
       NVL(RA.ORDERED_AMT, 0) RA_ORD_AMT,
       RMS.ORDERED_AMT-NVL(RA.ORDERED_AMT, 0) ORD_AMT_DIFF,
       RMS.RECEIVED_AMT RMS_REC_AMT,
       NVL(RA.RECEIVED_AMT, 0) RA_REC_AMT,
       RMS.RECEIVED_AMT-NVL(RA.RECEIVED_AMT, 0) REC_AMT_DIFF,
       SYSDATE W_INSERT_DT
  FROM RADM.JIN_RMS_SUPPCM_TMP RMS,
       RADM.JIN_RA_SUPPCM_TMP RA
 WHERE RMS.ORDER_NO = RA.ORDER_NO(+)
   AND RMS.ITEM = RA.ITEM(+)
   AND (NVL(RMS.ORDERED_QTY, 0) <> NVL(RA.ORDERED_QTY, 0) OR
       NVL(RMS.RECEIVED_QTY, 0) <> NVL(RA.RECEIVED_QTY, 0) OR
       (NVL(RMS.ORDERED_AMT, 0) - NVL(RA.ORDERED_AMT, 0)) > 0.01 OR
       (NVL(RMS.RECEIVED_AMT, 0) - NVL(RA.RECEIVED_AMT, 0)) > 0.01);

--**********************************************************************************
--29.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--30.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--31.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--32.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--33.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--34.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--35.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

--**********************************************************************************
--36.
--**********************************************************************************
/*MERGE \*+APPEND*\ INTO  T
USING()S
ON()
WHEN MATCHED THEN
  UPDATE SET
  WHEN NOT MATCHED THEN
INSERT()
VALUES();*/

SELECT SUM(T.SLS_QTY) SLS_QTY,
       SUM(T.SLS_AMT_LCL) SLS_AMT_LCL,
       SUM(T.RET_QTY) RET_QTY,
       SUM(T.RET_AMT_LCL) RET_AMT_LCL
  FROM RADM.BBG_RA_SLS_SC_LC_MN_CUR_A T;
SELECT SUM(T.SLS_QTY) SLS_QTY,
       SUM(T.SLS_AMT_LCL) SLS_AMT_LCL,
       SUM(T.RET_QTY) RET_QTY,
       SUM(T.RET_AMT_LCL) RET_AMT_LCL
  FROM RADM.BBG_RA_SLS_SC_LC_MN_CUR_A1 T;
----------------------------------------- 
SELECT SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
       SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
       SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM BBG_RA_SLS_SC_MN_CUR_A T;
SELECT SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
       SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
       SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM BBG_RA_SLS_SC_MN_CUR_A1 T;
