SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SUPP_SALES_IT_LC_DY_F T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_SC_LC_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_SC_LC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_SC_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_SC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_LC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_IT_LC_DY_SN_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_IT_LC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_IT_DY_SN_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_IT_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_DP_LC_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_DP_LC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_DP_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_CL_LC_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_CL_LC_DY_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

SELECT /*+PARALLEL(16)*/
 SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
 SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
  FROM RADM.BBG_RA_SLS_CL_DY_CUR_A T
 WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID;

--BBG_RA_SLS_SC_DY_CUR_A(120160429000,120160430000,120160501000,120160502000)
--BBG_RA_SLS_SC_DY_A(120160429000,120160430000,120160501000,120160502000,120160529000)
--BBG_RA_SLS_IT_DY_A(120160105000ȱʧ)
--BBG_RA_SLS_DP_DY_CUR_A(120160429000,120160430000,120160501000,120160502000)
--BBG_RA_SLS_CL_DY_CUR_A(120160429000,120160430000,120160501000,120160502000)

SELECT A.DT_WID,
       A.SUPP_SALES_QTY,
       B.SUPP_SALES_QTY,
       A.SUPP_SALES_QTY - NVL(B.SUPP_SALES_QTY, 0) DIFF_QTY,
       A.SUPP_SALES_COST,
       B.SUPP_SALES_COST,
       A.SUPP_SALES_COST - NVL(B.SUPP_SALES_COST, 0) DIFF_COST,
       A.SUPP_SALES_AMT,
       B.SUPP_SALES_AMT,
       A.SUPP_SALES_AMT - NVL(B.SUPP_SALES_AMT, 0) DIFF_AMT
  FROM (SELECT /*+PARALLEL(16)*/
         T.DT_WID,
         SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
         SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
         SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
          FROM RADM.BBG_RA_SUPP_SALES_IT_LC_DY_F T
         WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID
         GROUP BY T.DT_WID) A,
       (SELECT /*+PARALLEL(16)*/
         T.DT_WID,
         SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
         SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
         SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT
          FROM RADM.BBG_RA_SLS_IT_DY_A T
         WHERE T.DT_WID BETWEEN &BEGIN_DTWID AND &END_DTWID
         GROUP BY T.DT_WID) B
 WHERE A.DT_WID = B.DT_WID(+)
 ORDER BY 1;

--MERGE BBG_RA_SLS_IT_DY_A
MERGE /*+ APPEND */
INTO RADM.BBG_RA_SLS_IT_DY_A T
USING (SELECT T.PROD_WID,
              MAX(T.PROD_SCD1_WID) PROD_SCD1_WID,
              T.DT_WID,
              MAX(T.DATASOURCE_NUM_ID) DATASOURCE_NUM_ID,
              MAX(T.DELETE_FLG) DELETE_FLG,
              MAX(T.ETL_PROC_WID) ETL_PROC_WID,
              MAX(SUBSTR(T.INTEGRATION_ID,
                         0,
                         INSTR(T.INTEGRATION_ID, '~', 1, 1)) ||
                  SUBSTR(T.INTEGRATION_ID,
                         INSTR(T.INTEGRATION_ID, '~', 1, 2) + 1,
                         INSTR(T.INTEGRATION_ID, '~', 1, 3) + 8 - 1)) INTEGRATION_ID,
              MAX(T.INTEGRATION_ID),
              MAX(T.TENANT_ID) TENANT_ID,
              MAX(T.X_CUSTOM) X_CUSTOM,
              T.SUPPLIER_WID,
              SUM(T.SUPP_SALES_QTY) SUPP_SALES_QTY,
              SUM(T.SUPP_SALES_COST) SUPP_SALES_COST,
              SUM(T.SUPP_SALES_AMT) SUPP_SALES_AMT,
              SYSDATE W_INSERT_DT,
              SYSDATE W_UPDATE_DT,
              MAX(T.BBG_REFERENCE_DO1) BBG_REFERENCE_DO1,
              MAX(T.BBG_REFERENCE_DO2) BBG_REFERENCE_DO2,
              MAX(T.BBG_REFERENCE_DO3) BBG_REFERENCE_DO3,
              MAX(T.BBG_REFERENCE_DO4) BBG_REFERENCE_DO4,
              MAX(T.BBG_REFERENCE_DO5) BBG_REFERENCE_DO5,
              SUM(T.BBG_REFERENCE_FO1) BBG_REFERENCE_FO1,
              SUM(T.BBG_REFERENCE_FO2) BBG_REFERENCE_FO2,
              SUM(T.BBG_REFERENCE_FO3) BBG_REFERENCE_FO3,
              SUM(T.BBG_REFERENCE_FO4) BBG_REFERENCE_FO4,
              SUM(T.BBG_REFERENCE_FO5) BBG_REFERENCE_FO5,
              SUM(T.BBG_REFERENCE_FO6) BBG_REFERENCE_FO6,
              SUM(T.BBG_REFERENCE_FO7) BBG_REFERENCE_FO7,
              SUM(T.BBG_REFERENCE_FO8) BBG_REFERENCE_FO8,
              SUM(T.BBG_REFERENCE_FO9) BBG_REFERENCE_FO9,
              SUM(T.BBG_REFERENCE_FO10) BBG_REFERENCE_FO10
         FROM RADM.BBG_RA_SLS_IT_LC_DY_A T
        WHERE T.DT_WID = 120160105000
        GROUP BY T.PROD_WID, T.DT_WID, T.SUPPLIER_WID) S
ON (T.PROD_WID = S.PROD_WID AND T.DT_WID = S.DT_WID AND T.SUPPLIER_WID = S.SUPPLIER_WID)
WHEN MATCHED THEN
  UPDATE
     SET T.PROD_SCD1_WID      = S.PROD_SCD1_WID,
         T.DATASOURCE_NUM_ID  = S.DATASOURCE_NUM_ID,
         T.DELETE_FLG         = S.DELETE_FLG,
         T.ETL_PROC_WID       = S.ETL_PROC_WID,
         T.INTEGRATION_ID     = S.INTEGRATION_ID,
         T.TENANT_ID          = S.TENANT_ID,
         T.W_INSERT_DT        = S.W_INSERT_DT,
         T.W_UPDATE_DT        = S.W_UPDATE_DT,
         T.X_CUSTOM           = S.X_CUSTOM,
         T.BBG_REFERENCE_DO1  = S.BBG_REFERENCE_DO1,
         T.BBG_REFERENCE_DO2  = S.BBG_REFERENCE_DO2,
         T.BBG_REFERENCE_DO3  = S.BBG_REFERENCE_DO3,
         T.BBG_REFERENCE_DO4  = S.BBG_REFERENCE_DO4,
         T.BBG_REFERENCE_DO5  = S.BBG_REFERENCE_DO5,
         T.BBG_REFERENCE_FO1  = S.BBG_REFERENCE_FO1,
         T.BBG_REFERENCE_FO2  = S.BBG_REFERENCE_FO2,
         T.BBG_REFERENCE_FO3  = S.BBG_REFERENCE_FO3,
         T.BBG_REFERENCE_FO4  = S.BBG_REFERENCE_FO4,
         T.BBG_REFERENCE_FO5  = S.BBG_REFERENCE_FO5,
         T.BBG_REFERENCE_FO6  = S.BBG_REFERENCE_FO6,
         T.BBG_REFERENCE_FO7  = S.BBG_REFERENCE_FO7,
         T.BBG_REFERENCE_FO8  = S.BBG_REFERENCE_FO8,
         T.BBG_REFERENCE_FO9  = S.BBG_REFERENCE_FO9,
         T.BBG_REFERENCE_FO10 = S.BBG_REFERENCE_FO10,
         T.SUPP_SALES_QTY     = S.SUPP_SALES_QTY + T.SUPP_SALES_QTY,
         T.SUPP_SALES_COST    = S.SUPP_SALES_COST + T.SUPP_SALES_COST,
         T.SUPP_SALES_AMT     = S.SUPP_SALES_AMT + T.SUPP_SALES_AMT
WHEN NOT MATCHED THEN
  INSERT
    (T.ROW_WID,
     T.PROD_WID,
     T.PROD_SCD1_WID,
     T.DT_WID,
     T.DATASOURCE_NUM_ID,
     T.DELETE_FLG,
     T.ETL_PROC_WID,
     T.INTEGRATION_ID,
     T.TENANT_ID,
     T.W_INSERT_DT,
     T.W_UPDATE_DT,
     T.X_CUSTOM,
     T.SUPPLIER_WID,
     T.SUPP_SALES_QTY,
     T.SUPP_SALES_COST,
     T.SUPP_SALES_AMT,
     T.BBG_REFERENCE_DO1,
     T.BBG_REFERENCE_DO2,
     T.BBG_REFERENCE_DO3,
     T.BBG_REFERENCE_DO4,
     T.BBG_REFERENCE_DO5,
     T.BBG_REFERENCE_FO1,
     T.BBG_REFERENCE_FO2,
     T.BBG_REFERENCE_FO3,
     T.BBG_REFERENCE_FO4,
     T.BBG_REFERENCE_FO5,
     T.BBG_REFERENCE_FO6,
     T.BBG_REFERENCE_FO7,
     T.BBG_REFERENCE_FO8,
     T.BBG_REFERENCE_FO9,
     T.BBG_REFERENCE_FO10)
  VALUES
    (RADM.BBG_RA_SLS_IT_DY_A_SEQ.NEXTVAL,
     S.PROD_WID,
     S.PROD_SCD1_WID,
     S.DT_WID,
     S.DATASOURCE_NUM_ID,
     S.DELETE_FLG,
     S.ETL_PROC_WID,
     S.INTEGRATION_ID,
     S.TENANT_ID,
     S.W_INSERT_DT,
     S.W_UPDATE_DT,
     S.X_CUSTOM,
     S.SUPPLIER_WID,
     S.SUPP_SALES_QTY,
     S.SUPP_SALES_COST,
     S.SUPP_SALES_AMT,
     S.BBG_REFERENCE_DO1,
     S.BBG_REFERENCE_DO2,
     S.BBG_REFERENCE_DO3,
     S.BBG_REFERENCE_DO4,
     S.BBG_REFERENCE_DO5,
     S.BBG_REFERENCE_FO1,
     S.BBG_REFERENCE_FO2,
     S.BBG_REFERENCE_FO3,
     S.BBG_REFERENCE_FO4,
     S.BBG_REFERENCE_FO5,
     S.BBG_REFERENCE_FO6,
     S.BBG_REFERENCE_FO7,
     S.BBG_REFERENCE_FO8,
     S.BBG_REFERENCE_FO9,
     S.BBG_REFERENCE_FO10);
COMMIT;

SELECT * FROM RADM.BBG_RA_SLS_IT_LC_DY_A;
SELECT * FROM RADM.BBG_RA_SLS_IT_DY_A;
