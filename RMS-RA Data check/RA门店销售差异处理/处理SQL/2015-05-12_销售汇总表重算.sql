--1.DEL PLP SALES TABLE
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_CL_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_CL_LC_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_CL_LC_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_DP_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_DP_LC_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_DP_LC_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_IT_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_IT_DY_SN_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_IT_LC_DY_A T
 WHERE T.DT_WID = 120150512000; --此表数据量很大，需要分批删除。
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_IT_LC_DY_SN_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_LC_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_SC_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_SC_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_SC_LC_DY_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
DELETE /*+PARALLEL(T,16)*/
W_RTL_SLS_SC_LC_DY_CUR_A T
 WHERE T.DT_WID = 120150512000;
COMMIT;
--2.
TRUNCATE TABLE RABATCHER.W_RTL_SLS_IT_LC_DY_TMP;
--3.
insert into RABATCHER.W_RTL_SLS_IT_LC_DY_TMP T
  (ORG_WID,
   ORG_SCD1_WID,
   PROD_IT_WID,
   PROD_SCD1_WID,
   VOUCHER_FLG,
   RTL_TYPE_WID,
   EMPLOYEE_WID,
   ORG_LC_WID,
   ORG_DS_WID,
   ORG_RG_WID,
   ORG_AR_WID,
   ORG_CH_WID,
   PROD_DV_WID,
   PROD_GP_WID,
   PROD_DP_WID,
   PROD_CL_WID,
   PROD_SC_WID,
   DT_WID,
   WK_WID,
   PR_WID,
   QT_WID,
   DAY_DT,
   WK_NUM,
   PR_NUM,
   QT_NUM,
   ORG_NUM,
   ORG_DS_NUM,
   ORG_RG_NUM,
   ORG_AR_NUM,
   ORG_CH_NUM,
   PROD_IT_NUM,
   PROD_SC_NUM,
   PROD_CL_NUM,
   PROD_DP_NUM,
   PROD_GP_NUM,
   PROD_DV_NUM,
   RTL_TYPE_CODE,
   SLS_QTY,
   SLS_AMT_LCL,
   SLS_PROFIT_AMT_LCL,
   SLS_MANUAL_MKDN_AMT_LCL,
   SLS_MANUAL_MKUP_AMT_LCL,
   SLS_TAX_AMT_LCL,
   SLS_EMP_DISC_AMT_LCL,
   SLS_MANUAL_COUNT,
   SLS_SCAN_COUNT,
   RET_QTY,
   RET_AMT_LCL,
   RET_PROFIT_AMT_LCL,
   RET_MANUAL_MKDN_AMT_LCL,
   RET_MANUAL_MKUP_AMT_LCL,
   RET_TAX_AMT_LCL,
   RET_EMP_DISC_AMT_LCL,
   RET_MANUAL_COUNT,
   RET_SCAN_COUNT,
   SLS_TRX_COUNT,
   RET_TRX_COUNT,
   AUX1_CHANGED_ON_DT,
   AUX2_CHANGED_ON_DT,
   AUX3_CHANGED_ON_DT,
   AUX4_CHANGED_ON_DT,
   CHANGED_BY_ID,
   CHANGED_ON_DT,
   CREATED_BY_ID,
   CREATED_ON_DT,
   DATASOURCE_NUM_ID,
   DELETE_FLG,
   DOC_CURR_CODE,
   GLOBAL1_EXCHANGE_RATE,
   GLOBAL2_EXCHANGE_RATE,
   GLOBAL3_EXCHANGE_RATE,
   LOC_CURR_CODE,
   LOC_EXCHANGE_RATE,
   TENANT_ID,
   X_CUSTOM,
   BBG_ITEM_LOC_WID,
   BBG_RETAIL_TYPE_WID,
   BBG_CUSTOMER_COUNT,
   BBG_SERVICE_SATISFACTION,
   BBG_REFERENCE_DO1,
   BBG_REFERENCE_DO2,
   BBG_REFERENCE_DO3,
   BBG_REFERENCE_DO4,
   BBG_REFERENCE_DO5,
   BBG_REFERENCE_FO1,
   BBG_REFERENCE_FO2,
   BBG_REFERENCE_FO3,
   BBG_REFERENCE_FO4,
   BBG_REFERENCE_FO5,
   BBG_REFERENCE_FO6,
   BBG_REFERENCE_FO7,
   BBG_REFERENCE_FO8,
   BBG_REFERENCE_FO9,
   BBG_REFERENCE_FO10,
   BBG_RETAIL_TYPE_ID)
  select A.ORG_WID,
         MAX(A.ORG_SCD1_WID),
         A.PROD_WID,
         MAX(A.PROD_SCD1_WID),
         (CASE
           WHEN SUM((CASE
                      WHEN A.VOUCHER_ID = '-1' THEN
                       -1
                      ELSE
                       0
                    END)) <= 0 THEN
            'N'
           ELSE
            'Y'
         END),
         A.RTL_TYPE_WID,
         MAX(A.EMPLOYEE_WID),
         MAX(D.ORG_LC_WID),
         MAX(D.ORG_DS_WID),
         MAX(D.ORG_RG_WID),
         MAX(D.ORG_AR_WID),
         MAX(D.ORG_CH_WID),
         MAX(C.PROD_DV_WID),
         MAX(C.PROD_GP_WID),
         MAX(C.PROD_DP_WID),
         MAX(C.PROD_CL_WID),
         MAX(C.PROD_SC_WID),
         A.DT_WID,
         MAX('1' || E.MCAL_YEAR || '00' || E.MCAL_WEEK_OF_YEAR),
         MAX(E.MCAL_PERIOD_WID),
         MAX(E.MCAL_QTR_WID),
         MAX(E.MCAL_DAY_DT),
         MAX(E.MCAL_YEAR || E.MCAL_WEEK_OF_YEAR),
         MAX(E.MCAL_YEAR || E.MCAL_PERIOD),
         MAX(E.MCAL_YEAR || E.MCAL_QTR),
         MAX(D.ORG_NUM),
         MAX(D.ORG_DS_NUM),
         MAX(D.ORG_RG_NUM),
         MAX(D.ORG_AR_NUM),
         MAX(D.ORG_CH_NUM),
         MAX(C.PROD_IT_NUM),
         MAX(C.PROD_SC_NUM),
         MAX(C.PROD_CL_NUM),
         MAX(C.PROD_DP_NUM),
         MAX(C.PROD_GP_NUM),
         MAX(C.PROD_DV_NUM),
         MAX(A.RTL_TYPE_WID),
         SUM(A.SLS_QTY),
         SUM(A.SLS_AMT_LCL),
         SUM(A.SLS_PROFIT_AMT_LCL),
         SUM(A.SLS_MANUAL_MKDN_AMT_LCL),
         SUM(A.SLS_MANUAL_MKUP_AMT_LCL),
         SUM(A.SLS_TAX_AMT_LCL),
         SUM(A.SLS_EMP_DISC_AMT_LCL),
         SUM(A.SLS_MANUAL_COUNT),
         SUM(A.SLS_SCAN_COUNT),
         SUM(A.RET_QTY),
         SUM(A.RET_AMT_LCL),
         SUM(A.RET_PROFIT_AMT_LCL),
         SUM(A.RET_MANUAL_MKDN_AMT_LCL),
         SUM(A.RET_MANUAL_MKUP_AMT_LCL),
         SUM(A.RET_TAX_AMT_LCL),
         SUM(A.RET_EMP_DISC_AMT_LCL),
         SUM(A.RET_MANUAL_COUNT),
         SUM(A.RET_SCAN_COUNT),
         COUNT(DISTINCT((CASE
                          WHEN (A.SLS_MANUAL_COUNT > 0 AND A.SLS_SCAN_COUNT > 0) THEN
                           A.SLS_TRX_ID
                          ELSE
                           NULL
                        END))),
         COUNT(DISTINCT((CASE
                          WHEN (A.RET_MANUAL_COUNT > 0 AND A.RET_SCAN_COUNT > 0) THEN
                           A.SLS_TRX_ID
                          ELSE
                           NULL
                        END))),
         MAX(A.AUX1_CHANGED_ON_DT),
         MAX(A.AUX2_CHANGED_ON_DT),
         MAX(A.AUX3_CHANGED_ON_DT),
         MAX(A.AUX4_CHANGED_ON_DT),
         MAX(A.CHANGED_BY_WID),
         MAX(A.CHANGED_ON_DT),
         MAX(A.CREATED_BY_WID),
         MAX(A.CREATED_ON_DT),
         MAX(A.DATASOURCE_NUM_ID),
         MAX(A.DELETE_FLG),
         MAX(A.DOC_CURR_CODE),
         MAX(A.GLOBAL1_EXCHANGE_RATE),
         MAX(A.GLOBAL2_EXCHANGE_RATE),
         MAX(A.GLOBAL3_EXCHANGE_RATE),
         MAX(A.LOC_CURR_CODE),
         MAX(A.LOC_EXCHANGE_RATE),
         MAX(A.TENANT_ID),
         MAX(A.X_CUSTOM),
         A.BBG_ITEM_LOC_WID,
         A.BBG_RETAIL_TYPE_WID,
         count(distinct A.SLS_TRX_ID),
         avg(A.BBG_SERVICE_SATISFACTION),
         A.BBG_REFERENCE_DO1,
         A.BBG_REFERENCE_DO2,
         A.BBG_REFERENCE_DO3,
         A.BBG_REFERENCE_DO4,
         A.BBG_REFERENCE_DO5,
         SUM(A.BBG_REFERENCE_FO1),
         SUM(A.BBG_REFERENCE_FO2),
         A.BBG_REFERENCE_FO3,
         A.BBG_REFERENCE_FO4,
         A.BBG_REFERENCE_FO5,
         A.BBG_REFERENCE_FO6,
         A.BBG_REFERENCE_FO7,
         A.BBG_REFERENCE_FO8,
         A.BBG_REFERENCE_FO9,
         A.BBG_REFERENCE_FO10,
         MAX(B.RETAIL_TYPE_ID)
    from RADM.W_RTL_SLS_TRX_IT_LC_DY_F  A,
         RADM.BBG_RA_RETAIL_TYPE_D      B,
         RABATCHER.W_PRODUCT_D_RTL_TMP  C,
         RABATCHER.W_INT_ORG_DH_RTL_TMP D,
         RADM.W_MCAL_DAY_D              E
   where A.BBG_RETAIL_TYPE_WID = B.ROW_WID
     AND A.PROD_WID = C.PROD_IT_WID
     AND A.ORG_DH_WID = D.ORG_LC_WID
     AND A.DT_WID = E.ROW_WID
     AND A.DT_WID = 120150512000
   Group By A.ORG_WID,
            A.PROD_WID,
            A.RTL_TYPE_WID,
            A.DT_WID,
            A.BBG_ITEM_LOC_WID,
            A.BBG_RETAIL_TYPE_WID,
            A.BBG_REFERENCE_DO1,
            A.BBG_REFERENCE_DO2,
            A.BBG_REFERENCE_DO3,
            A.BBG_REFERENCE_DO4,
            A.BBG_REFERENCE_DO5,
            A.BBG_REFERENCE_FO3,
            A.BBG_REFERENCE_FO4,
            A.BBG_REFERENCE_FO5,
            A.BBG_REFERENCE_FO6,
            A.BBG_REFERENCE_FO7,
            A.BBG_REFERENCE_FO8,
            A.BBG_REFERENCE_FO9,
            A.BBG_REFERENCE_FO10;
COMMIT;
--4.
TRUNCATE TABLE RADM.C_LOAD_DATES;
