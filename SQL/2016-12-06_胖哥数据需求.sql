--1.
CREATE TABLE RADM.BBG_SUPP_SLS_TMP AS
SELECT /*+PARALLEL(16)*/
 SUBSTR(A.DT_WID, 2, 6) MONTH,
 A.SUPPLIER_WID,
 A.PROD_WID,
 A.ORG_WID,
 SUM(A.SUPP_SALES_QTY) SUPP_SALES_QTY,
 SUM(A.SUPP_SALES_AMT) SUPP_SALES_AMT,
 SUM(A.SUPP_SALES_AMT - A.SUPP_SALES_COST) SUPP_SALES_PROFIT,
 LAG(SUM(A.SUPP_SALES_QTY), 12) OVER(PARTITION BY A.SUPPLIER_WID, A.ORG_WID, A.PROD_WID ORDER BY SUBSTR(A.DT_WID, 2, 6)) LY_SUPP_SALES_QTY,
 LAG(SUM(A.SUPP_SALES_AMT), 12) OVER(PARTITION BY A.SUPPLIER_WID, A.ORG_WID, A.PROD_WID ORDER BY SUBSTR(A.DT_WID, 2, 6)) LY_SUPP_SALES_AMT,
 LAG(SUM(A.SUPP_SALES_AMT - A.SUPP_SALES_COST), 12) OVER(PARTITION BY A.SUPPLIER_WID, A.ORG_WID, A.PROD_WID ORDER BY SUBSTR(A.DT_WID, 2, 6)) LY_SUPP_SALES_PROFIT
  FROM RADM.BBG_RA_SLS_IT_LC_DY_A_V A
 GROUP BY SUBSTR(A.DT_WID, 2, 6), A.SUPPLIER_WID, A.PROD_WID, A.ORG_WID;

--1.1 
CREATE UNIQUE INDEX PK_BBG_SUPP_SLS_TMP ON BBG_SUPP_SLS_TMP (MONTH, SUPPLIER_WID, PROD_WID, ORG_WID);
 
--2.
CREATE TABLE RADM.BBG_SUPPCM_TMP AS
SELECT /*+PARALLEL(16)*/
 SUBSTR(B.DT_WID, 2, 6) MONTH,
 B.SUPPLIER_WID,
 B.PROD_WID,
 B.ORG_WID,
 SUM(B.BBG_REFERENCE_FO1) ORDER_AMT,
 SUM(B.BBG_REFERENCE_FO2) RECEIVED_AMT,
 LAG(SUM(B.BBG_REFERENCE_FO1), 12) OVER(PARTITION BY B.SUPPLIER_WID, B.ORG_WID, B.PROD_WID ORDER BY SUBSTR(B.DT_WID, 2, 6)) LY_ORDER_AMT,
 LAG(SUM(B.BBG_REFERENCE_FO2), 12) OVER(PARTITION BY B.SUPPLIER_WID, B.ORG_WID, B.PROD_WID ORDER BY SUBSTR(B.DT_WID, 2, 6)) LY_RECEIVED_AMT
  FROM RADM.W_RTL_SUPPCM_IT_LC_TD_MV B
 GROUP BY SUBSTR(B.DT_WID, 2, 6), B.SUPPLIER_WID, B.PROD_WID, B.ORG_WID;
 
--2.2 
CREATE UNIQUE INDEX PK_BBG_SUPPCM_TMP ON BBG_SUPPCM_TMP (MONTH, SUPPLIER_WID, PROD_WID, ORG_WID);

--3.tmp table total
CREATE TABLE RADM.BBG_SUPP_CM_SLS_TMP AS
SELECT S.MONTH,
       S.ORG_WID,
       S.SUPPLIER_WID,
       S.PROD_WID,
       S.SUPP_SALES_QTY,
       S.SUPP_SALES_AMT,
       S.SUPP_SALES_PROFIT,
       S.LY_SUPP_SALES_QTY,
       S.LY_SUPP_SALES_AMT,
       S.LY_SUPP_SALES_PROFIT,
       C.ORDER_AMT,
       C.RECEIVED_AMT,
       C.LY_ORDER_AMT,
       C.LY_RECEIVED_AMT
  FROM RADM.BBG_SUPP_SLS_TMP S, RADM.BBG_SUPPCM_TMP C
 WHERE S.MONTH = C.MONTH(+)
   AND S.ORG_WID = C.ORG_WID(+)
   AND S.SUPPLIER_WID = C.SUPPLIER_WID(+)
   AND S.PROD_WID = C.PROD_WID(+)
UNION ALL
SELECT S.MONTH,
       S.ORG_WID,
       S.SUPPLIER_WID,
       S.PROD_WID,
       S.SUPP_SALES_QTY,
       S.SUPP_SALES_AMT,
       S.SUPP_SALES_PROFIT,
       S.LY_SUPP_SALES_QTY,
       S.LY_SUPP_SALES_AMT,
       S.LY_SUPP_SALES_PROFIT,
       C.ORDER_AMT,
       C.RECEIVED_AMT,
       C.LY_ORDER_AMT,
       C.LY_RECEIVED_AMT
  FROM RADM.BBG_SUPP_SLS_TMP S, RADM.BBG_SUPPCM_TMP C
 WHERE C.MONTH = S.MONTH(+)
   AND C.ORG_WID = S.ORG_WID(+)
   AND C.SUPPLIER_WID = S.SUPPLIER_WID(+)
   AND C.PROD_WID = S.PROD_WID(+);
--3.1
CREATE UNIQUE INDEX PK_BBG_SUPP_CM_SLS_TMP ON BBG_SUPP_CM_SLS_TMP (MONTH, SUPPLIER_WID, PROD_WID, ORG_WID);

--4.supp inv
CREATE TABLE RMSHIST.JIN_SUPP_INV_TMP AS
  SELECT SUBSTR(TO_CHAR(T.SOH_BAK_DATE, 'YYYYMMDD'), 1, 6) MONTH,
         T.LOC,
         T.SUPPLIER,
         T.ITEM,
         SUM(T.TOTAL_COST) TOTAL_COST
    FROM RMSHIST.CMX_SUPP_INV_BAK T
   WHERE T.SOH_BAK_DATE IN (DATE '2016-01-31',
                            DATE '2016-02-29',
                            DATE '2016-03-31',
                            DATE '2016-04-30',
                            DATE '2016-05-31',
                            DATE '2016-06-30',
                            DATE '2016-07-31',
                            DATE '2016-08-31',
                            DATE '2016-09-30',
                            DATE '2016-10-31',
                            DATE '2016-11-30')
     AND T.TOTAL_COST <> 0
		 GROUP BY SUBSTR(TO_CHAR(T.SOH_BAK_DATE, 'YYYYMMDD'), 1, 6),
         T.LOC,
         T.SUPPLIER,
         T.ITEM;

--4.1
CREATE TABLE RADM.BBG_SUPP_INV_TMP AS
SELECT * FROM RMSHIST.JIN_SUPP_INV_TMP@RA_RMS_DBLINK;

DROP TABLE RADM.BBG_SUPP_INV_TMP;

CREATE UNIQUE INDEX PK_BBG_SUPP_INV_TMP ON BBG_SUPP_INV_TMP (MONTH, LOC, SUPPLIER, ITEM);
 


--5.tmp table 
SELECT MD.CAL_MONTH_WID       月份,
       O.ORG_NUM              门店编码,
       OT.ORG_NAME            门店名称,
       SUPP.SUPPLIER_NUM      供应商编码,
       SUPP.ORG_NAME          供应商名称,
       P.PROD_NUM             商品编码,
       PT.PRODUCT_NAME        商品名称,
       P.BBG_ITEM_BRAND       品牌,
       F.SUPP_SALES_QTY       销量,
       F.SUPP_SALES_AMT       销售额,
       F.SUPP_SALES_PROFIT    毛利额,
       F.LY_SUPP_SALES_QTY    去年销量,
       F.LY_SUPP_SALES_AMT    去年销售额,
       F.LY_SUPP_SALES_PROFIT 去年毛利额,
       F.ORDER_AMT            订货金额,
       F.RECEIVED_AMT         收货金额,
       F.LY_ORDER_AMT         去年订货金额,
       F.LY_RECEIVED_AMT      去年收货金额,
       I.TOTAL_COST           月平均库存成本
  FROM RADM.BBG_SUPP_CM_SLS_TMP F,
       RADM.BBG_SUPP_INV_TMP I,
       RADM.W_INT_ORG_D O,
       RADM.W_INT_ORG_D_TL OT,
       RADM.W_PRODUCT_D P,
       RADM.W_PRODUCT_D_TL PT,
       RADM.W_PARTY_ORG_D SUPP,
       (SELECT DISTINCT T.CAL_MONTH_WID FROM RADM.W_MCAL_DAY_D T) MD
 WHERE O.ROW_WID = F.ORG_WID
   AND P.ROW_WID = F.PROD_WID
   AND SUPP.ROW_WID = F.SUPPLIER_WID
   AND O.INTEGRATION_ID = OT.INTEGRATION_ID
   AND P.INTEGRATION_ID = PT.INTEGRATION_ID
   AND PT.LANGUAGE_CODE = 'ZHS'
   AND MD.CAL_MONTH_WID = F.MONTH
   AND MD.CAL_MONTH_WID = I.MONTH(+)
   AND O.ORG_NUM = I.LOC(+)
   AND SUPP.SUPPLIER_NUM = I.SUPPLIER(+)
   AND P.PROD_NUM = I.ITEM(+)
   AND MD.CAL_MONTH_WID BETWEEN 201601 AND 201611
   AND SUPP.SUPPLIER_NUM IN (29001970, 29001971, 29000792, 29001927)
 ORDER BY 1, 2, 4, 6;

--6.report
SELECT * FROM RADM.BBG_REPORT_LHLH_TMP;
SELECT * FROM RADM.BBG_REPORT_YL_TMP;
SELECT * FROM RADM.BBG_REPORT_BJ_TMP;
